{"version":3,"sources":["src/app/modules/pages/add-category/add-category.component.html","src/app/modules/pages/add-exam/add-exam.component.html","src/app/modules/pages/add-material/add-material.component.html","src/app/modules/pages/add-parent/add-parent.component.html","src/app/modules/pages/add-question/add-question.component.html","src/app/modules/pages/add-stage/add-stage.component.html","src/app/modules/pages/add-student/add-student.component.html","src/app/modules/pages/add-subject/add-subject.component.html","src/app/modules/pages/add-teacher/add-teacher.component.html","src/app/modules/pages/add-user/add-user.component.html","src/app/modules/pages/addSubjectMaterial/addSubjectMaterial.component.html","src/app/modules/pages/category-list/category-list.component.html","src/app/modules/pages/dash-board/dash-board.component.html","src/app/modules/pages/exam-list/exam-list.component.html","src/app/modules/pages/material-list/material-list.component.html","src/app/modules/pages/pages/pages.component.html","src/app/modules/pages/profile/profile.component.html","src/app/modules/pages/stage-List/stage-List.component.html","src/app/modules/pages/subject-list/subject-list.component.html","src/app/modules/pages/subjectMaterials/subjectMaterials.component.html","src/app/modules/pages/update-user/update-user.component.html","src/app/modules/pages/users-list/user-subj/user-subj.component.html","src/app/modules/pages/users-list/users-list.component.html","src/app/Service/category.service.ts","src/app/Service/exams.service.ts","src/app/Service/material.service.ts","src/app/Service/satges.service.ts","src/app/Service/sbject.service.ts","src/app/Service/user-list.service.ts","src/app/Service/user-subjects.service.ts","src/app/modules/pages/add-category/add-category.component.scss","src/app/modules/pages/add-category/add-category.component.ts","src/app/modules/pages/add-exam/add-exam.component.css","src/app/modules/pages/add-exam/add-exam.component.ts","src/app/modules/pages/add-material/add-material.component.css","src/app/modules/pages/add-material/add-material.component.ts","src/app/modules/pages/add-parent/add-parent.component.scss","src/app/modules/pages/add-parent/add-parent.component.ts","src/app/modules/pages/add-question/add-question.component.css","src/app/modules/pages/add-question/add-question.component.ts","src/app/modules/pages/add-stage/add-stage.component.css","src/app/modules/pages/add-stage/add-stage.component.ts","src/app/modules/pages/add-student/add-student.component.scss","src/app/modules/pages/add-student/add-student.component.ts","src/app/modules/pages/add-subject/add-subject.component.scss","src/app/modules/pages/add-subject/add-subject.component.ts","src/app/modules/pages/add-teacher/add-teacher.component.scss","src/app/modules/pages/add-teacher/add-teacher.component.ts","src/app/modules/pages/add-user/add-user.component.scss","src/app/modules/pages/add-user/add-user.component.ts","src/app/modules/pages/addSubjectMaterial/addSubjectMaterial.component.css","src/app/modules/pages/addSubjectMaterial/addSubjectMaterial.component.ts","src/app/modules/pages/category-list/category-list.component.css","src/app/modules/pages/category-list/category-list.component.ts","src/app/modules/pages/dash-board/dash-board.component.scss","src/app/modules/pages/dash-board/dash-board.component.ts","src/app/modules/pages/exam-list/exam-list.component.css","src/app/modules/pages/exam-list/exam-list.component.ts","src/app/modules/pages/material-list/material-list.component.css","src/app/modules/pages/material-list/material-list.component.ts","src/app/modules/pages/pages-routing.module.ts","src/app/modules/pages/pages.module.ts","src/app/modules/pages/pages/pages.component.scss","src/app/modules/pages/pages/pages.component.ts","src/app/modules/pages/profile/profile.component.css","src/app/modules/pages/profile/profile.component.ts","src/app/modules/pages/stage-List/stage-List.component.css","src/app/modules/pages/stage-List/stage-List.component.ts","src/app/modules/pages/subject-list/subject-list.component.css","src/app/modules/pages/subject-list/subject-list.component.ts","src/app/modules/pages/subjectMaterials/subjectMaterials.component.css","src/app/modules/pages/subjectMaterials/subjectMaterials.component.ts","src/app/modules/pages/update-user/update-user.component.css","src/app/modules/pages/update-user/update-user.component.ts","src/app/modules/pages/users-list/user-subj/user-subj.component.scss","src/app/modules/pages/users-list/user-subj/user-subj.component.ts","src/app/modules/pages/users-list/users-list.component.scss","src/app/modules/pages/users-list/users-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\r\\n<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Add Ctegory</p>\\r\\n  \\r\\n      <form #catForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCategory()\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Category name\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"category.name\\\"\\r\\n          required #name=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Add Exam</p>\\r\\n  \\r\\n      <form #catForm=\\\"ngForm\\\" (ngSubmit)=\\\"addExam()\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam title\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\"\\r\\n          required #title=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam duration\\\" type=\\\"number\\\" name=\\\"duration\\\" [(ngModel)]=\\\"model.duration\\\"\\r\\n          required #duration=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam mark\\\" type=\\\"number\\\" name=\\\"mark\\\" [(ngModel)]=\\\"model.mark\\\"\\r\\n          required #mark=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam notes\\\" type=\\\"text\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\"\\r\\n          required #notes=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"<div class=\\\"register-box\\\">\\r\\n  <div class=\\\"register-box-body\\\">\\r\\n    <p class=\\\"login-box-msg\\\">Add Subject</p>\\r\\n\\r\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMaterial()\\\" enctype=\\\"multipart/form-data\\\">\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\"\\r\\n          tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\" name=\\\"subject\\\" [(ngModel)]=\\\"model.subject\\\" required #subject=\\\"ngModel\\\"\\r\\n          (change)=\\\"setSubject($event.target.value)\\\">\\r\\n          <option [value]=\\\"0\\\" disabled>Select subject</option>\\r\\n          <option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.id\\\">\\r\\n            {{subject.name}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"title\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\"\\r\\n        required #title=\\\"ngModel\\\">         \\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".pdf,.doc,.docx\\\">\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"notes\\\" type=\\\"text\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\"\\r\\n        required #notes=\\\"ngModel\\\">         \\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <!-- /.col -->\\r\\n        <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n          <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\r\\n        </div>\\r\\n        <!-- /.col -->\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <!-- /.form-box -->\\r\\n</div>\\r\\n\\r\\n<div class=\\\"loader\\\" [hidden]=\\\"loaderHidden\\\"></div> \\r\\n\\r\\n\"","export default \"<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Register a new parent</p>\\r\\n  \\r\\n      <form action=\\\"../../index.html\\\" method=\\\"post\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"S S N\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"fa fa-calendar\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Adress\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Job\\\" type=\\\"text\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n          </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Retype password\\\" type=\\\"password\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Register</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"<div class=\\\"box\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">code</th>\\r\\n            <th scope=\\\"col\\\">title</th>\\r\\n            <th scope=\\\"col\\\">duration</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <th scope=\\\"row\\\">{{exam.id}}</th>\\r\\n            <td>{{exam.title}}</td>\\r\\n            <td>{{exam.duration}} hours</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <br> <br>\\r\\n      <h2>exam questions</h2>\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">code</th>\\r\\n            <th scope=\\\"col\\\">title</th>\\r\\n            <th scope=\\\"col\\\">mark</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let que of questions\\\">\\r\\n            <th scope=\\\"row\\\">{{que.id}}</th>\\r\\n            <td>{{que.content}}</td>\\r\\n            <td>{{que.mark}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"register-box\\\">\\r\\n        <div class=\\\"register-box-body\\\">\\r\\n          <p class=\\\"login-box-msg\\\">Add Question</p>\\r\\n\\r\\n          <form #question=\\\"ngForm\\\" (ngSubmit)=\\\"addQuestion()\\\">\\r\\n            <div class=\\\"form-group has-feedback\\\">\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"question content\\\" type=\\\"text\\\" name=\\\"content\\\"\\r\\n                [(ngModel)]=\\\"model.content\\\" minlength=\\\"5\\\" required #content=\\\"ngModel\\\">\\r\\n              <div *ngIf=\\\"!content.valid && (content.touched ||content.dirty )\\\" class=\\\"alert-danger\\\">\\r\\n                <div *ngIf=\\\"content?.errors.minlength\\\">\\r\\n                  Name must be at least 5 characters long.\\r\\n                </div>\\r\\n                <div *ngIf=\\\"content?.errors.required\\\">\\r\\n                  content must entered.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group has-feedback\\\">\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"question mark\\\" type=\\\"number\\\" name=\\\"mark\\\" [(ngModel)]=\\\"model.mark\\\"\\r\\n                required #mark=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!mark.valid && (mark.touched ||mark.dirty )\\\" class=\\\"alert-danger\\\">\\r\\n              \\r\\n              <div *ngIf=\\\"mark?.errors.required\\\">\\r\\n                mark must entered.\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- /.col -->\\r\\n            <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n              <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\"\\r\\n              [disabled]=\\\"!question.valid\\\">Add</button>\\r\\n            </div>\\r\\n            <!-- /.col -->\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n        <!-- /.form-box -->\\r\\n      </div>\\r\\n      <!-- /.register-box -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"\\r\\n<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Add Stage</p>\\r\\n  \\r\\n      <form #catForm=\\\"ngForm\\\" (ngSubmit)=\\\"addStage()\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"satge name\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"stage.name\\\"\\r\\n          required #name=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Register a new student</p>\\r\\n  \\r\\n      <form action=\\\"../../index.html\\\" method=\\\"post\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"S S N\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n            <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n                <option selected=\\\"selected\\\" data-select2-id=\\\"3\\\">select parent</option>\\r\\n                <option>Alaska</option>\\r\\n                <option>California</option>\\r\\n                <option>Delaware</option>\\r\\n                <option>Tennessee</option>\\r\\n                <option>Texas</option>\\r\\n                <option>Washington</option>\\r\\n              </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"fa fa-calendar\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Adress\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Retype password\\\" type=\\\"password\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Register</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"\\r\\n<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Add Subject</p>\\r\\n  \\r\\n      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addSubject()\\\">\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"subject name\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"subject.name\\\"\\r\\n          required #name=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"credit hour\\\" type=\\\"number\\\" min=\\\"0\\\"\\r\\n            name=\\\"credit_hours\\\" [(ngModel)]=\\\"subject.credit_hours\\\" required #credit_hours=\\\"ngModel\\\">         \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n            <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\"\\r\\n            name=\\\"stage\\\" [(ngModel)]=\\\"subject.stage\\\" required #stage=\\\"ngModel\\\" (change)=\\\"setStage($event.target.value)\\\">\\r\\n            <option [value]=\\\"0\\\" disabled>Select  satge</option>\\r\\n            <option *ngFor=\\\"let stage of satges\\\" [value]=\\\"stage.id\\\">\\r\\n              {{stage.name}}\\r\\n            </option>               \\r\\n              </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\"\\r\\n          name=\\\"category\\\" [(ngModel)]=\\\"subject.category\\\" required #category=\\\"ngModel\\\" (change)=\\\"setcategory($event.target.value)\\\" >\\r\\n          <option [value]=\\\"0\\\" disabled>Select  category</option>\\r\\n          <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\r\\n            {{category.name}}\\r\\n          </option>                            \\r\\n            </select>\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n \"","export default \"<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">Register a new teacher</p>\\r\\n  \\r\\n      <form action=\\\"../../index.html\\\" method=\\\"post\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"S S N\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"fa fa-calendar\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Adress\\\" type=\\\"text\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Retype password\\\" type=\\\"password\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">         \\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Register</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"<div class=\\\"register-box\\\">\\r\\n  <div class=\\\"register-box-body\\\">\\r\\n    <p class=\\\"login-box-msg\\\">Register a new membership Admin</p>\\r\\n\\r\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"user name\\\" type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\r\\n          required #username=\\\"ngModel\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\r\\n        <div *ngIf=\\\"username.errors.required\\\">\\r\\n          User Name is required.\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <select class=\\\"form-control\\\" name=\\\"user_type\\\" (change)=\\\"selected($event.target.value)\\\"\\r\\n          [(ngModel)]=\\\"user.user_type\\\" required  #user_type=\\\"ngModel\\\" >\\r\\n          <option disabled [value]=\\\"0\\\">select user type</option>\\r\\n          <option [value]='1'>ADMIN</option>\\r\\n          <option [value]=\\\"2\\\"> STUDENT</option>\\r\\n          <option [value]=\\\"3\\\">PARENT</option>\\r\\n          <option [value]=\\\"4\\\">TEACHER</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"user_type.invalid && (user_type.dirty || user_type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\r\\n        <div *ngIf=\\\"user_type.errors.required\\\">\\r\\n          User Type is required.\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\" name=\\\"first_name\\\"\\r\\n          [(ngModel)]=\\\"user.first_name\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\" name=\\\"phone\\\" [(ngModel)]=\\\"user.phone\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-addon\\\">\\r\\n            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n          </div>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'yyyy/dd/mm/'\\\" data-mask=\\\"\\\" name=\\\"birth_date\\\"\\r\\n            [(ngModel)]=\\\"user.birth_date\\\" required #birth_date=\\\"ngModel\\\"> \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"birth_date.invalid && (birth_date.dirty || birth_date.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"birth_date.errors.required\\\">\\r\\n          User Name is required.\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"Address\\\" type=\\\"text\\\" name=\\\"adress\\\" [(ngModel)]=\\\"user.adress\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" \\r\\n        [(ngModel)]=\\\"user.password\\\"  required #password=\\\"ngModel\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"password.errors.required\\\">\\r\\n          User Name is required.\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" [hidden]=\\\"studentHidden\\\">\\r\\n        <select class=\\\"form-control\\\" name=\\\"stage_id\\\" \\r\\n          [(ngModel)]=\\\"user.stage\\\">\\r\\n          <option [value]=\\\"0\\\" selected>select student stage</option>\\r\\n          <option *ngFor=\\\"let stage of stages\\\" [value]=\\\"stage.id\\\">\\r\\n            {{stage.name}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" [hidden]=\\\"teacherHidden\\\">\\r\\n        <select class=\\\"form-control\\\" name=\\\"category\\\" (change)=\\\"setcategory($event.target.value)\\\"\\r\\n          [(ngModel)]=\\\"user.category\\\">\\r\\n          <option [value]=\\\"0\\\" selected>select category</option>\\r\\n          <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\r\\n            {{category.name}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"teacherHidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-addon\\\">\\r\\n            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n          </div>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\" name=\\\"hire_date\\\"\\r\\n            [(ngModel)]=\\\"user.hire_date\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"parentHidden\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"job\\\" type=\\\"text\\\" name=\\\"job\\\" [(ngModel)]=\\\"user.job\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <!-- /.col -->\\r\\n        <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n          <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\" \\r\\n         [disabled]=\\\"!registerForm.valid\\\">Register</button>\\r\\n        </div>\\r\\n        <!-- /.col -->\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n  <!-- /.form-box -->\\r\\n</div>\\r\\n<!-- /.register-box -->\"","export default \"<div class=\\\"register-box\\\">\\r\\n  <div class=\\\"register-box-body\\\">\\r\\n    <p class=\\\"login-box-msg\\\">Add Subject</p>\\r\\n\\r\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMaterial()\\\" enctype=\\\"multipart/form-data\\\">\\r\\n\\r\\n     \\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"title\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\"\\r\\n        required #title=\\\"ngModel\\\">         \\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".pdf,.doc,.docx\\\">\\r\\n\\r\\n      <div class=\\\"form-group has-feedback\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"notes\\\" type=\\\"text\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\"\\r\\n        required #notes=\\\"ngModel\\\">         \\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <!-- /.col -->\\r\\n        <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n          <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\r\\n        </div>\\r\\n        <!-- /.col -->\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <!-- /.form-box -->\\r\\n</div>\\r\\n\\r\\n\"","export default \"<br>\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addcategory')\\\">create category</button>\\r\\n<br> <br> <br>\\r\\n<div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\"\\r\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">id</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    name</th>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let cat of categories\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{cat.id}}</td>\\r\\n                                <td>{{cat.name}}</td>                                \\r\\n                                <!-- <td>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\r\\n                                </td> -->\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","export default \"<section class=\\\"content-header\\\">\\r\\n  <!-- <h1>\\r\\n    Blank page\\r\\n    <small>it all starts here</small>\\r\\n  </h1>\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\r\\n    <li><a href=\\\"#\\\">Examples</a></li>\\r\\n    <li class=\\\"active\\\">Blank page</li>\\r\\n  </ol> -->\\r\\n</section>\\r\\n\\r\\n<!-- Main content -->\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n</section>\\r\\n<!-- /.content -->\\r\\n\"","export default \"<br>\\r\\n<br>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addexam')\\\">create exam</button> \\r\\n<br> <br> <br>\\r\\n<div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\"\\r\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">id</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"title: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    title</th>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let exam of exams\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{exam.id}}</td>\\r\\n                                <td>{{exam.title}}</td>                                \\r\\n                                <td>                                   \\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"select(exam)\\\">add questions</button>\\r\\n                                </td> \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","export default \"<br>\\r\\n<br>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addmaterial')\\\">create Material</button>\\r\\n<br> <br> <br>\\r\\n\\r\\n\\r\\n  <div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\"\\r\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">id</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    name</th>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let material of materials\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{material.title}}</td>\\r\\n                                <td><a href=\\\"{{material.path}}\\\" download>Download the file</a></td>  \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","export default \"<div class=\\\"wrapper\\\">\\r\\n  <app-header></app-header>\\r\\n   <app-side-nav></app-side-nav> \\r\\n  <div class=\\\"content-wrapper\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\"","export default \"<div class=\\\"box\\\">\\r\\n  <!-- /.box-header -->\\r\\n  <div class=\\\"box-body\\\">\\r\\n      <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n          \\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12\\\">\\r\\n                  <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                      aria-describedby=\\\"example1_info\\\">\\r\\n                      <thead>\\r\\n                          <tr role=\\\"row\\\">\\r\\n                              <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                  aria-sort=\\\"ascending\\\"\\r\\n                                  aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                  style=\\\"width: 182px;\\\">id</th>\\r\\n                              <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                  aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                  name</th>\\r\\n                              \\r\\n                          </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                          <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let subject of subjects\\\">\\r\\n                              <td class=\\\"sorting_1\\\">{{subject.id}}</td>\\r\\n                              <td>{{subject.name}}</td>                                \\r\\n                              <td>                                   \\r\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\"  [routerLink]=\\\"['../subjectMaterials/',subject.id]\\\">get materials</button>\\r\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['../addSubjectMaterials/',subject.id]\\\"\\r\\n                                  *ngIf=\\\"checkRule('TECH')==true\\\">add materials</button>\\r\\n                              </td> \\r\\n                          </tr>\\r\\n                      </tbody>\\r\\n                      <tfoot>\\r\\n                          <tr>\\r\\n                              \\r\\n                          </tr>\\r\\n                      </tfoot>\\r\\n                  </table>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <!-- /.box-body -->\\r\\n</div>\"","export default \"\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addstage')\\\">create satge</button>\\r\\n<br> <br> <br>\\r\\n<div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\"\\r\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">id</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    name</th>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let satge of stages\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{satge.id}}</td>\\r\\n                                <td>{{satge.name}}</td>                                \\r\\n                                <!-- <td>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\r\\n                                </td> -->\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","export default \"<br>\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addsubject')\\\">create subject</button>\\r\\n<br> <br> <br>\\r\\n<div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\" aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">id</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    name</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"stage: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    stage</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"category: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    category</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"credit_hours: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    credit_hours</th>\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let subject of subjects\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{subject.id}}</td>\\r\\n                                <td>{{subject.name}}</td>\\r\\n                                <td>{{subject.category.name}}</td>\\r\\n                                <td>{{subject.stage.name}}</td>\\r\\n                                <td>{{subject.credit_hours}}</td>\\r\\n\\r\\n                                <!-- <td>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\r\\n                                </td> -->\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            <tr>\\r\\n                                <th rowspan=\\\"1\\\" colspan=\\\"1\\\">id</th>\\r\\n                                <th rowspan=\\\"1\\\" colspan=\\\"1\\\">name</th>\\r\\n\\r\\n                            </tr>\\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","export default \"\"","export default \"<br><br>\\r\\n<br><br>\\r\\n\\r\\n\\r\\n<div class=\\\"register-box\\\">    \\r\\n    <div class=\\\"register-box-body\\\">\\r\\n      <p class=\\\"login-box-msg\\\">update user</p>\\r\\n  \\r\\n      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"update()\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"user name\\\" type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\r\\n            required #username=\\\"ngModel\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n        <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n  \\r\\n          <div *ngIf=\\\"username.errors.required\\\">\\r\\n            User Name is required.\\r\\n          </div>\\r\\n  \\r\\n        </div>\\r\\n  \\r\\n  \\r\\n        <div class=\\\"form-group\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"user_type\\\" (change)=\\\"selected($event.target.value)\\\"\\r\\n            [(ngModel)]=\\\"user.user_type\\\" required  #user_type=\\\"ngModel\\\" >\\r\\n            <option disabled selected>select user type</option>\\r\\n            <option [value]='1'>ADMIN</option>\\r\\n            <option [value]=\\\"2\\\"> STUDENT</option>\\r\\n            <option [value]=\\\"3\\\">PARENT</option>\\r\\n            <option [value]=\\\"4\\\">TEACHER</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"user_type.invalid && (user_type.dirty || user_type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n  \\r\\n          <div *ngIf=\\\"user_type.errors.required\\\">\\r\\n            User Type is required.\\r\\n          </div>\\r\\n  \\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\" name=\\\"first_name\\\"\\r\\n            [(ngModel)]=\\\"user.first_name\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\" name=\\\"phone\\\" [(ngModel)]=\\\"user.phone\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"fa fa-calendar\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'yyyy/dd/mm/'\\\" data-mask=\\\"\\\" name=\\\"birth_date\\\"\\r\\n              [(ngModel)]=\\\"user.birth_date\\\" required #birth_date=\\\"ngModel\\\"> \\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div *ngIf=\\\"birth_date.invalid && (birth_date.dirty || birth_date.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div *ngIf=\\\"birth_date.errors.required\\\">\\r\\n            User Name is required.\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Address\\\" type=\\\"text\\\" name=\\\"adress\\\" [(ngModel)]=\\\"user.adress\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" \\r\\n          [(ngModel)]=\\\"user.password\\\"  required #password=\\\"ngModel\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div *ngIf=\\\"password.errors.required\\\">\\r\\n            User Name is required.\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group\\\" [hidden]=\\\"studentHidden\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"stage_id\\\" (change)=\\\"slectSatge($event.target.value)\\\"\\r\\n            [(ngModel)]=\\\"user.stage\\\">\\r\\n            <option [value]=\\\"0\\\" selected>select student stage</option>\\r\\n            <option *ngFor=\\\"let stage of stages\\\" [value]=\\\"stage.id\\\" [selected]=\\\"stage.id\\\">\\r\\n              {{stage.name}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group\\\" [hidden]=\\\"teacherHidden\\\">\\r\\n          <select class=\\\"form-control\\\" name=\\\"category\\\" (change)=\\\"selected($event.target.value)\\\"\\r\\n            [(ngModel)]=\\\"user.category\\\">\\r\\n            <option [value]=\\\"0\\\" selected>select category</option>\\r\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\" [selected]=\\\"category.id\\\">\\r\\n              {{category.name}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"teacherHidden\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-addon\\\">\\r\\n              <i class=\\\"fa fa-calendar\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\" name=\\\"hire_date\\\"\\r\\n              [(ngModel)]=\\\"user.hire_date\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"parentHidden\\\">\\r\\n          <input class=\\\"form-control\\\" placeholder=\\\"job\\\" type=\\\"text\\\" name=\\\"job\\\" [(ngModel)]=\\\"user.job\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\r\\n        </div>\\r\\n  \\r\\n  \\r\\n        <div class=\\\"row\\\">\\r\\n          <!-- /.col -->\\r\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\r\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\" \\r\\n           [disabled]=\\\"!registerForm.valid\\\">Register</button>\\r\\n          </div>\\r\\n          <!-- /.col -->\\r\\n        </div>\\r\\n  \\r\\n  \\r\\n      </form>    \\r\\n    </div>\\r\\n    <!-- /.form-box -->\\r\\n  </div>\\r\\n  <!-- /.register-box -->\\r\\n  \"","export default \"<br>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"form-group\\\" >\\r\\n    <select class=\\\"form-control\\\">\\r\\n      <option [value]=\\\"0\\\" selected>add subject</option>\\r\\n      <option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.id\\\" (click) = \\\"add(subject)\\\"> \\r\\n        {{subject.name}}\\r\\n      </option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\" aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">id</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    name</th>\\r\\n                                <th>\\r\\n\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let subject of userSubjects\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{subject.id}}</td>\\r\\n                                <td>{{subject.name}}</td>\\r\\n                                \\r\\n                                <td>\\r\\n                                    <button class=\\\"danger\\\" (click)=\\\"remove(subject.name)\\\">Delete</button>\\r\\n                                </td>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                           \\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Save</button>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","export default \"<br>\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/adduser')\\\">create user</button>\\r\\n<br> <br> <br>\\r\\n<div class=\\\"box\\\">\\r\\n    <!-- /.box-header -->\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\r\\n                        aria-describedby=\\\"example1_info\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-sort=\\\"ascending\\\"\\r\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\r\\n                                    style=\\\"width: 182px;\\\">user name</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"email: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\r\\n                                    email</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"user type: activate to sort column ascending\\\" style=\\\"width: 199px;\\\">\\r\\n                                    user type</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"is superuser: activate to sort column ascending\\\"\\r\\n                                    style=\\\"width: 156px;\\\">is superuser</th>\\r\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\r\\n                                    aria-label=\\\"CSS grade: activate to sort column ascending\\\" style=\\\"width: 113px;\\\">Actions\\r\\n                                    </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let user of users\\\">\\r\\n                                <td class=\\\"sorting_1\\\">{{user.username}}</td>\\r\\n                                <td>{{user.email}}</td>\\r\\n                                <td>{{user.user_type}}</td>\\r\\n                                <td>{{user.is_superuser}}</td>\\r\\n                                <td>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\r\\n                                    <a type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/home/user-subj', user.id]\\\">subjects</a>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        <tfoot>\\r\\n                            \\r\\n                        </tfoot>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /.box-body -->\\r\\n</div>\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/categorys/\";\r\n  token =JSON.parse(localStorage.getItem('token'));\r\n  headers_object;\r\n\r\n  httpOptions;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n       'Authorization': \"token \"+ this.token \r\n    });\r\n  \r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  }\r\n\r\n  getListCategories(){\r\n   return this.http.get(this.baseUrl,this.httpOptions)\r\n  }\r\n\r\n  addCategory(category:any){\r\n    return this.http.post(this.baseUrl,category,this.httpOptions)\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExamsService {\r\n\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/exams/\";\r\n  token =JSON.parse(localStorage.getItem('token'));\r\n  headers_object;\r\n\r\n  httpOptions;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n       'Authorization': \"token \"+ this.token \r\n    });\r\n  \r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  }\r\n\r\n  addExam(exam){\r\n    return this.http.post(this.baseUrl,exam,this.httpOptions);\r\n  }\r\n\r\n  getExam(id:Number){\r\n    return this.http.get(this.baseUrl+id,this.httpOptions);\r\n  }\r\n\r\n  getAllExam(){\r\n    return this.http.get(this.baseUrl,this.httpOptions);\r\n  }\r\n\r\n  addQuestions(id:Number,question){\r\n    return this.http.post(this.baseUrl+id+\"/addQuestions/\",question,this.httpOptions);\r\n  }\r\n\r\n  getExamQuestions(id){\r\n    return this.http.get(this.baseUrl+id+\"/questions\" , this.httpOptions)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Material } from '../models/material';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MaterialService {\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/materials/\";\r\n  token = JSON.parse(localStorage.getItem('token'));\r\n  headers_object;\r\n\r\n  httpOptions;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"token \" + this.token\r\n    });\r\n    this.headers_object.append('enctype', 'multipart/form-data');\r\n    this.headers_object.set('Content-Type', 'false');\r\n    this.headers_object.set('mimeType', 'application/json');\r\n\r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  }\r\n\r\n  getList() {\r\n    return this.http.get(this.baseUrl, this.httpOptions);\r\n  }\r\n\r\n  save(material) {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Token \" + this.token);\r\n\r\n\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: material,\r\n\r\n    };\r\n    return fetch(\"https://smart-school-project.herokuapp.com/api/materials/\", requestOptions)\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SatgesService {\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/stages/\";\r\n  token =JSON.parse(localStorage.getItem('token'));\r\n  headers_object;\r\n\r\n  httpOptions;\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n       'Authorization': \"token \"+ this.token \r\n    });\r\n  \r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  }\r\n\r\n  getListStages(){\r\n    return this.http.get(this.baseUrl,this.httpOptions)\r\n   }\r\n\r\n   addStage(satge:any){\r\n    return this.http.post(this.baseUrl,satge,this.httpOptions)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SbjectService {\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/subjects/\";\r\n  token =JSON.parse(localStorage.getItem('token'));\r\n  headers_object;\r\n  httpOptions;\r\n\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n       'Authorization': \"token \"+ this.token \r\n    });\r\n  \r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  }\r\n\r\n  getListSubjects(){\r\n    return this.http.get(this.baseUrl,this.httpOptions)\r\n   }\r\n\r\n   addSsubject(subject:any){\r\n    return this.http.post(this.baseUrl,subject,this.httpOptions)\r\n  }\r\n\r\n  getUserSubjects(id:Number){\r\n    return this.http.get(\"https://smart-school-project.herokuapp.com/api/users/\"+id+\"/subjects\",this.httpOptions)\r\n  }\r\n\r\n  getSubjectMAterial(id:Number){\r\n    return this.http.get(\"https://smart-school-project.herokuapp.com/api/subjects/\"+id+\"/materials\",this.httpOptions)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserListService {\r\n  users:any;\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/\";\r\n  token =JSON.parse(localStorage.getItem('token'));\r\n\r\n  headers_object;\r\n\r\n  httpOptions;\r\n\r\n\r\n  constructor(private http:HttpClient) { \r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n       'Authorization': \"token \"+ this.token \r\n    });\r\n  \r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  \r\n  }\r\n\r\n  getAllUsers(){    \r\n    return this.http.get(this.baseUrl + \"users\",this.httpOptions)    \r\n  }\r\n\r\n  registerUser(user:any){    \r\n    return this.http.post(this.baseUrl + \"users/\",user,this.httpOptions) \r\n  }\r\n\r\n  removeUser(id:number){\r\n    id = Number(id);\r\n    return this.http.delete(this.baseUrl + \"users/\"+id,this.httpOptions) \r\n  }\r\n\r\n  updateUser(user:any){\r\n    return this.http.patch(this.baseUrl + \"users/\" +Number(user.id),user,this.httpOptions) \r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserSubjectsService {\r\n\r\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/users/\";\r\n  token = JSON.parse(localStorage.getItem('token'));\r\n  headers_object;\r\n\r\n  httpOptions;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.headers_object = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"token \" + this.token\r\n    });\r\n\r\n    this.httpOptions = {\r\n      headers: this.headers_object\r\n    };\r\n  }\r\n\r\n  getUserSubjects(id: Number) {\r\n    return this.http.get(this.baseUrl + id + \"/subjects\", this.httpOptions);\r\n  }\r\n\r\n  updateUserSubjects(id: Number, subjects: FormData) {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"token \" + this.token);\r\n\r\n    var requestOptions = {\r\n      method: 'PATCH',\r\n      headers: myHeaders,\r\n      body: subjects\r\n    };\r\n\r\n    fetch(\"https://smart-school-project.herokuapp.com/api/users/\" + id + \"/\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => console.log(result))\r\n      .catch(error => console.log('error', error));\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLWNhdGVnb3J5L2FkZC1jYXRlZ29yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from 'src/app/models/category';\r\nimport { CategoryService } from 'src/app/Service/category.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-category',\r\n  templateUrl: './add-category.component.html',\r\n  styleUrls: ['./add-category.component.scss']\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\ncategory:Category ={\r\n  name:\"\"\r\n}\r\n  constructor(private categoryService:CategoryService,private sharedSevice:SharedMethodService,private auth:AuthService) { \r\n    this.auth.logOut();\r\n    var result =this.auth.getusertype();\r\n     if(result!='ADM'){\r\n       this.sharedSevice.navigate(\"home\")           \r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addCategory(){\r\n    this.categoryService.addCategory(this.category).subscribe(\r\n      ()=>{\r\n        this.sharedSevice.navigate(\"/home/categories\")\r\n      }\r\n    )\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLWV4YW0vYWRkLWV4YW0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ExamsService } from 'src/app/Service/exams.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-exam',\r\n  templateUrl: './add-exam.component.html',\r\n  styleUrls: ['./add-exam.component.css']\r\n})\r\nexport class AddExamComponent implements OnInit {\r\nmodel:any = {};\r\n  constructor(private examService:ExamsService,private sharedservice:SharedMethodService,private auth:AuthService) { \r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addExam(){\r\n    this.examService.addExam(this.model).subscribe(\r\n      ()=>{alert(\"added success\");this.sharedservice.navigate(\"home/exams\")}\r\n    )\r\n  }\r\n}\r\n","export default \".loader {\\r\\n    border: 25px solid #f3f3f3; /* Light grey */\\r\\n    border-top: 25px solid #3498db; /* Blue */\\r\\n    border-radius: 50%;\\r\\n    width: 240px;\\r\\n    height: 240px;\\r\\n    -webkit-animation: spin 2s linear infinite;\\r\\n            animation: spin 2s linear infinite;\\r\\n    position: absolute;\\r\\n    top:32%;\\r\\n    left: 44%;\\r\\n   \\r\\n  }\\r\\n  \\r\\n  @-webkit-keyframes spin {\\r\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n  }\\r\\n  \\r\\n  @keyframes spin {\\r\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hZGQtbWF0ZXJpYWwvYWRkLW1hdGVyaWFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEIsRUFBRSxlQUFlO0lBQzNDLDhCQUE4QixFQUFFLFNBQVM7SUFDekMsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixhQUFhO0lBQ2IsMENBQWtDO1lBQWxDLGtDQUFrQztJQUNsQyxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFNBQVM7O0VBRVg7O0VBRUE7SUFDRSxLQUFLLCtCQUF1QixFQUF2Qix1QkFBdUIsRUFBRTtJQUM5QixPQUFPLGlDQUF5QixFQUF6Qix5QkFBeUIsRUFBRTtFQUNwQzs7RUFIQTtJQUNFLEtBQUssK0JBQXVCLEVBQXZCLHVCQUF1QixFQUFFO0lBQzlCLE9BQU8saUNBQXlCLEVBQXpCLHlCQUF5QixFQUFFO0VBQ3BDIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hZGQtbWF0ZXJpYWwvYWRkLW1hdGVyaWFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGVyIHtcclxuICAgIGJvcmRlcjogMjVweCBzb2xpZCAjZjNmM2YzOyAvKiBMaWdodCBncmV5ICovXHJcbiAgICBib3JkZXItdG9wOiAyNXB4IHNvbGlkICMzNDk4ZGI7IC8qIEJsdWUgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAyNDBweDtcclxuICAgIGhlaWdodDogMjQwcHg7XHJcbiAgICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOjMyJTtcclxuICAgIGxlZnQ6IDQ0JTtcclxuICAgXHJcbiAgfVxyXG4gIFxyXG4gIEBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\nimport { Material } from 'src/app/models/material';\r\nimport { MaterialService } from 'src/app/Service/material.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-material',\r\n  templateUrl: './add-material.component.html',\r\n  styleUrls: ['./add-material.component.css']\r\n})\r\nexport class AddMaterialComponent implements OnInit {\r\n  loaderHidden = true;\r\n  subjects: any = [];\r\n  model: Material = {\r\n    subject: 0,\r\n    material_type: \"pdf\",\r\n    title: \"\",\r\n    path: null,\r\n    notes: \"\"\r\n  };\r\n\r\n  form: FormData = new FormData();\r\n\r\n  constructor(private materialService: MaterialService, private subjectService: SbjectService, private auth: AuthService) {\r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subjectService.getListSubjects().subscribe(\r\n      (response: any) => { this.subjects = response }\r\n    )\r\n  }\r\n\r\n  setSubject(subjectId: number) {\r\n    this.model.subject = subjectId;\r\n  }\r\n\r\n\r\n\r\n  fileChange(event) {\r\n    let fileList: FileList = event.target.files;\r\n    if (fileList.length > 0) {\r\n      let file: File = fileList[0];\r\n\r\n      this.form.append(\"subject\", this.model.subject.toString());\r\n      this.form.append(\"material_type\", \"pdf\");\r\n      this.form.append(\"title\", this.model.title);\r\n      this.form.append(\"path\", file, file.name);\r\n      this.form.append(\"notes\", this.model.notes);\r\n    }\r\n  }\r\n\r\n  async addMaterial() {\r\n    this.loaderHidden = false;\r\n    await this.delay(300);\r\n    this.materialService.save(this.form).then(response => alert(\"added succefully\"))\r\n      .then(result => console.log(result))\r\n      .catch(error => console.log('error', error));\r\n    this.loaderHidden = true\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXBhcmVudC9hZGQtcGFyZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-parent',\r\n  templateUrl: './add-parent.component.html',\r\n  styleUrls: ['./add-parent.component.scss']\r\n})\r\nexport class AddParentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXF1ZXN0aW9uL2FkZC1xdWVzdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ExamsService } from 'src/app/Service/exams.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-question',\r\n  templateUrl: './add-question.component.html',\r\n  styleUrls: ['./add-question.component.css']\r\n})\r\nexport class AddQuestionComponent implements OnInit {\r\n  exam: any = {};\r\n  questions:any[] =[];\r\n  model:any={};\r\n  questionList:any[]= [];\r\n  constructor(private examservice:ExamsService,private auth:AuthService) {\r\n    auth.logOut();\r\n  this.exam = JSON.parse(localStorage.getItem('examdata'))\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.examservice.getExamQuestions(1).subscribe(\r\n      (data:any)=>{this.questions=data.data;console.log(this.questions)}\r\n    )\r\n  }\r\n\r\n  addQuestion(){\r\n    this.model.mark = this.model.mark.toString();\r\n    this.questionList.push(this.model)\r\n   this.examservice.addQuestions(this.exam.id,this.questionList).subscribe(\r\n     ()=>{alert(\"done\");\r\n    this.questions.push(this.model)}\r\n   )\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXN0YWdlL2FkZC1zdGFnZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from 'src/app/models/category';\r\nimport { SatgesService } from 'src/app/Service/satges.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-stage',\r\n  templateUrl: './add-stage.component.html',\r\n  styleUrls: ['./add-stage.component.css']\r\n})\r\nexport class AddStageComponent implements OnInit {\r\n\r\n  stage:Category = {\r\n    name:\"\"\r\n  }\r\n  constructor(private satgeService:SatgesService,private sharedSevice:SharedMethodService,private auth:AuthService) { \r\n    auth.logOut();\r\n    var result =this.auth.getusertype();\r\n     if(result!='ADM'){\r\n       this.sharedSevice.navigate(\"home\")           \r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addStage(){\r\n    this.satgeService.addStage(this.stage).subscribe(\r\n      ()=>{ this.sharedSevice.navigate(\"/home/stages\")}\r\n    )\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXN0dWRlbnQvYWRkLXN0dWRlbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.scss']\r\n})\r\nexport class AddStudentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXN1YmplY3QvYWRkLXN1YmplY3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'src/app/models/subject';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\nimport { SatgesService } from 'src/app/Service/satges.service';\r\nimport { CategoryService } from 'src/app/Service/category.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-subject',\r\n  templateUrl: './add-subject.component.html',\r\n  styleUrls: ['./add-subject.component.scss']\r\n})\r\nexport class AddSubjectComponent implements OnInit {\r\n  subject:Subject = {\r\n    name:\"\",\r\n    credit_hours:null,\r\n    stage:0,\r\n    category:0\r\n  }\r\n  satges:any;\r\n  categories:any;\r\n\r\n  satgesObserver = {\r\n    next: (data: any) => this.satges = data,\r\n    error: (err: string) => console.error('Observer got an error: ' + err),\r\n    complete: () => { this.categoryService.getListCategories().subscribe(this.categoryObserver)},\r\n  };\r\n\r\n  categoryObserver = {\r\n    next: (data: any) => this.categories = data,\r\n    error: (err: string) => console.error('Observer got an error: ' + err),\r\n    complete: () => { },\r\n  };\r\n\r\n  constructor(private router:Router,private subjectService:SbjectService,private auth:AuthService,private sharedservice:SharedMethodService,private stageService:SatgesService,private categoryService:CategoryService) { \r\n    auth.logOut();\r\n    var result =this.auth.getusertype();\r\n     if(result!='ADM'){\r\n       this.sharedservice.navigate(\"home\")           \r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.stageService.getListStages().subscribe(this.satgesObserver)\r\n  }\r\n\r\n  setStage(stage:any){\r\n    this.subject.stage = stage;\r\n  }\r\n\r\n  setcategory(cat:any){\r\n    this.subject.category = cat;\r\n  }\r\n\r\n  addSubject(){\r\n    this.subjectService.addSsubject(this.subject).subscribe(\r\n      ()=>{alert(\"Added succesfully\");this.router.navigateByUrl(\"/home/subjects\")}\r\n    )\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXRlYWNoZXIvYWRkLXRlYWNoZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-teacher',\r\n  templateUrl: './add-teacher.component.html',\r\n  styleUrls: ['./add-teacher.component.scss']\r\n})\r\nexport class AddTeacherComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXVzZXIvYWRkLXVzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserListService } from 'src/app/Service/user-list.service';\r\nimport { UserAdd } from 'src/app/models/user-add';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CategoryService } from 'src/app/Service/category.service';\r\nimport { SatgesService } from 'src/app/Service/satges.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  user:UserAdd= {\r\n    username:\"\",\r\n    first_name:\"\",\r\n    last_name:\"\",\r\n    user_type:\"0\",\r\n    email:\"\",\r\n    password:\"\",\r\n    phone:\"\",\r\n    birth_date: null,    \r\n    job:\"\",\r\n    stage:null,\r\n    category:null,\r\n    hire_date:null,\r\n    adress:\"\"\r\n  };\r\n  type:any;\r\n  categories:any;\r\n  stages:any;\r\n  studentHidden:boolean = true;\r\n  teacherHidden:boolean = true;\r\n  parentHidden:boolean=true;\r\n\r\n  constructor(private userl:UserListService, private datePipe: DatePipe,private ctegorService:CategoryService,private stageService:SatgesService,private shareS:SharedMethodService,private auth:AuthService) { \r\n    auth.logOut();\r\n    var result =this.auth.getusertype();\r\n    if(result!='ADM'){\r\n      this.shareS.navigate(\"home\")           \r\n   }\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getcategories(){\r\n    this.ctegorService.getListCategories().subscribe(\r\n      (data:any)=>{this.categories = data}\r\n    )\r\n  }\r\n\r\n  getStages(){\r\n    this.stageService.getListStages().subscribe(\r\n      (data:any)=>{this.stages = data}\r\n    )\r\n  }\r\n  //slect user type and maping values\r\n  selected(value:any){\r\n      if(value == 1)\r\n      {\r\n        this.type= \"ADM\";\r\n        this.studentHidden = this.parentHidden  = this.teacherHidden= true;\r\n      }\r\n    \r\n      if(value == 2)\r\n      {\r\n        this.type = \"STD\";\r\n        this.studentHidden = false;\r\n        this.parentHidden  = this.teacherHidden= true;\r\n        this.user.stage = 0;\r\n        this.getStages();\r\n      }\r\n     \r\n      if(value == 3)\r\n      {\r\n        this.type = \"PAR\";\r\n        this.parentHidden = false;\r\n        this.studentHidden = this.teacherHidden=  true;\r\n      }\r\n      \r\n      if(value == 4)\r\n      {\r\n        this.type = \"TECH\";\r\n        this.teacherHidden = false;\r\n        this.studentHidden = this.parentHidden  = true;\r\n        this.user.category = 0;\r\n        this.getcategories();\r\n      }\r\n      \r\n      console.log(this.type)\r\n  }\r\n\r\n  setcategory(cat:Number){\r\n   this.user.category = Number(cat)\r\n  }\r\n\r\n  register(){\r\n    console.log(this.user)\r\n    this.user.user_type = this.type;    \r\n    var date = this.user.birth_date;\r\n   var date1 = this.datePipe.transform(date,\"yyyy-MM-dd\"); \r\n    this.userl.registerUser(this.user).subscribe(\r\n        (resposnse:any)=>{console.log(resposnse);this.user.user_type = \"0\";this.shareS.navigate(\"/home/users\")}\r\n      )\r\n    \r\n  }\r\n\r\n  \r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkU3ViamVjdE1hdGVyaWFsL2FkZFN1YmplY3RNYXRlcmlhbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\nimport { Material } from 'src/app/models/material';\r\nimport { MaterialService } from 'src/app/Service/material.service';\r\n\r\n@Component({\r\n  selector: 'app-addSubjectMaterial',\r\n  templateUrl: './addSubjectMaterial.component.html',\r\n  styleUrls: ['./addSubjectMaterial.component.css']\r\n})\r\nexport class AddSubjectMaterialComponent implements OnInit {\r\n  model:Material = {\r\n    subject:0,\r\n    material_type:\"pdf\",\r\n    title:\"\",\r\n    path:null,\r\n    notes:\"\"\r\n  };\r\n  form:FormData = new FormData();\r\n  subjectId;\r\n  constructor(private materialService:MaterialService,private router:ActivatedRoute,private subjectService:SbjectService,private auth:AuthService) { \r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subjectId = this.router.snapshot.params['id'];\r\n    this.model.subject = this.subjectId;\r\n  }\r\n\r\n  fileChange(event) {\r\n    let fileList: FileList = event.target.files;\r\n    if(fileList.length > 0) {\r\n      let file: File = fileList[0];   \r\n     \r\n    this.form.append(\"subject\", this.model.subject.toString());\r\n    this.form.append(\"material_type\", \"pdf\");\r\n    this.form.append(\"title\", this.model.title);\r\n    this.form.append(\"path\", file, file.name);\r\n    this.form.append(\"notes\", this.model.notes);\r\n  }\r\n}\r\n\r\n  addMaterial(){    \r\n    this.materialService.save(this.form)\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvY2F0ZWdvcnktbGlzdC9jYXRlZ29yeS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from 'src/app/Service/category.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-category-list',\r\n  templateUrl: './category-list.component.html',\r\n  styleUrls: ['./category-list.component.css']\r\n})\r\nexport class CategoryListComponent implements OnInit {\r\n  categories:any;\r\n  constructor(private categoryservice:CategoryService,private sharedservice:SharedMethodService,private auth:AuthService) { \r\n    auth.logOut();\r\n    var result =this.auth.getusertype();\r\n    if(result!='ADM'){\r\n      this.sharedservice.navigate(\"home\")           \r\n   }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.categoryservice.getListCategories().subscribe(\r\n      (data:any)=>{this.categories = data}\r\n    )\r\n  }\r\n\r\n  get(url:string){\r\n    this.sharedservice.navigate(url);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvZGFzaC1ib2FyZC9kYXNoLWJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dash-board',\r\n  templateUrl: './dash-board.component.html',\r\n  styleUrls: ['./dash-board.component.scss']\r\n})\r\nexport class DashBoardComponent implements OnInit {\r\n\r\n  constructor(private auth:AuthService) {\r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvZXhhbS1saXN0L2V4YW0tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ExamsService } from 'src/app/Service/exams.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-exam-list',\r\n  templateUrl: './exam-list.component.html',\r\n  styleUrls: ['./exam-list.component.css']\r\n})\r\nexport class ExamListComponent implements OnInit {\r\n  exams:any[];\r\n  constructor(private examservice:ExamsService,private sharedservice:SharedMethodService,private auth:AuthService) {\r\n    auth.logOut();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.examservice.getAllExam().subscribe(\r\n      (data:any)=>{this.exams = data}\r\n    )\r\n  }\r\n\r\n  get(url){\r\n    this.sharedservice.navigate(url);\r\n    \r\n  }\r\n\r\n  select(exam){    \r\n    localStorage.setItem('examdata', JSON.stringify(exam));\r\n    this.sharedservice.navigate('/home/addquestion')\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWF0ZXJpYWwtbGlzdC9tYXRlcmlhbC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { MaterialService } from 'src/app/Service/material.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-material-list',\r\n  templateUrl: './material-list.component.html',\r\n  styleUrls: ['./material-list.component.css']\r\n})\r\nexport class MaterialListComponent implements OnInit {\r\n\r\n  materials:any;\r\n  constructor(private sharedservice:SharedMethodService,private mterialService:MaterialService,private auth:AuthService) { \r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mterialService.getList().subscribe(\r\n      (data:any)=>{this.materials = data;console.log(data)}\r\n    )\r\n  }\r\n\r\n  get(url:string){\r\n    this.sharedservice.navigate(url);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {PagesComponent} from './pages/pages.component';\r\nimport {DashBoardComponent} from './dash-board/dash-board.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { AddParentComponent } from './add-parent/add-parent.component';\r\nimport { AddTeacherComponent } from './add-teacher/add-teacher.component';\r\nimport { AddStudentComponent } from './add-student/add-student.component';\r\nimport { AddCategoryComponent } from './add-category/add-category.component';\r\nimport { AddSubjectComponent } from './add-subject/add-subject.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\nimport { UpdateUserComponent } from './update-user/update-user.component';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\nimport { StageListComponent } from './stage-List/stage-List.component';\r\nimport { AddStageComponent } from './add-stage/add-stage.component';\r\nimport { SubjectListComponent } from './subject-list/subject-list.component';\r\n\r\nimport { UserSubjComponent } from './users-list/user-subj/user-subj.component';\r\nimport { AddMaterialComponent } from './add-material/add-material.component';\r\nimport { MaterialListComponent } from './material-list/material-list.component';\r\nimport { ExamListComponent } from './exam-list/exam-list.component';\r\nimport { AddExamComponent } from './add-exam/add-exam.component';\r\nimport { AddQuestionComponent } from './add-question/add-question.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SubjectMaterialsComponent } from './subjectMaterials/subjectMaterials.component';\r\nimport { AddSubjectMaterialComponent } from './addSubjectMaterial/addSubjectMaterial.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: PagesComponent, children: [\r\n      {path: '', component: DashBoardComponent},\r\n      {path:'adduser',component:AddUserComponent},\r\n      {path:'UpdateUser',component:UpdateUserComponent},\r\n      {path:'AddParent',component:AddParentComponent},\r\n      {path:'AddTeacher',component:AddTeacherComponent},\r\n      {path:'AddStudent',component:AddStudentComponent},\r\n      {path:'addcategory',component:AddCategoryComponent},\r\n      {path:'addsubject',component:AddSubjectComponent},\r\n      {path:'users',component:UsersListComponent},\r\n      {path:\"stages\",component:StageListComponent},\r\n      {path:\"addstage\",component:AddStageComponent},\r\n      {path:'categories',component:CategoryListComponent},\r\n      {path:'subjects',component:SubjectListComponent},     \r\n      {path:'user-subj/:id',component:UserSubjComponent},\r\n      {path:'addmaterial',component:AddMaterialComponent},\r\n      {path:'materials',component:MaterialListComponent},\r\n      {path:'exams',component:ExamListComponent},\r\n      {path:'addexam',component:AddExamComponent},\r\n      {path:'addquestion',component:AddQuestionComponent},\r\n      {path:'userMaterials',component:ProfileComponent},\r\n      {path:'subjectMaterials/:id',component:SubjectMaterialsComponent},\r\n      {path:'addSubjectMaterials/:id',component:AddSubjectMaterialComponent},\r\n\r\n      { path: \"**\", component: DashBoardComponent }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PagesRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DatePipe} from '@angular/common';\r\n\r\nimport {PagesRoutingModule} from './pages-routing.module';\r\nimport {PagesComponent} from './pages/pages.component';\r\nimport {DashBoardComponent} from './dash-board/dash-board.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\n\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { AddParentComponent } from './add-parent/add-parent.component';\r\nimport { AddTeacherComponent } from './add-teacher/add-teacher.component';\r\nimport { AddStudentComponent } from './add-student/add-student.component';\r\nimport { AddCategoryComponent } from './add-category/add-category.component';\r\nimport { AddSubjectComponent } from './add-subject/add-subject.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { UpdateUserComponent } from './update-user/update-user.component';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\nimport { StageListComponent } from './stage-List/stage-List.component';\r\nimport { AddStageComponent } from './add-stage/add-stage.component';\r\nimport { SubjectListComponent } from './subject-list/subject-list.component';\r\n\r\nimport { UserSubjComponent } from './users-list/user-subj/user-subj.component';\r\nimport { AddMaterialComponent } from './add-material/add-material.component';\r\nimport { MaterialListComponent } from './material-list/material-list.component';\r\nimport { ExamListComponent } from './exam-list/exam-list.component';\r\nimport { AddExamComponent } from './add-exam/add-exam.component';\r\nimport { AddQuestionComponent } from './add-question/add-question.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SubjectMaterialsComponent } from './subjectMaterials/subjectMaterials.component';\r\nimport { AddSubjectMaterialComponent } from './addSubjectMaterial/addSubjectMaterial.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PagesComponent,\r\n     DashBoardComponent,\r\n      AddUserComponent,\r\n       AddParentComponent,\r\n        AddTeacherComponent,\r\n         AddStudentComponent,\r\n          AddCategoryComponent,\r\n           AddSubjectComponent,\r\n            UsersListComponent,\r\n            UpdateUserComponent,\r\n            CategoryListComponent,\r\n            StageListComponent,\r\n            AddStageComponent,\r\n            SubjectListComponent,\r\n            UserSubjComponent\r\n    ,AddMaterialComponent,\r\n  MaterialListComponent,\r\nExamListComponent,\r\nAddExamComponent,\r\nAddQuestionComponent,\r\nProfileComponent,\r\nSubjectMaterialsComponent,\r\nAddSubjectMaterialComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PagesRoutingModule,\r\n    LayoutModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class PagesModule {\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvcGFnZXMvcGFnZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styleUrls: ['./pages.component.scss']\r\n})\r\nexport class PagesComponent implements OnInit {\r\n\r\n  constructor(private auth:AuthService) {\r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n    window.dispatchEvent(new Event('resize'));\r\n    $('body').addClass('hold-transition skin-blue sidebar-mini');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  userId:any = {};\r\n  subjects:any;\r\n  constructor(private auth:AuthService,private subjectService:SbjectService) { \r\n    this.userId = auth.getUserId();   \r\n    auth.logOut();\r\n    subjectService.getUserSubjects(this.userId).subscribe(\r\n      (data:any)=>{this.subjects = data}\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n  checkRule(rule:any){\r\n    if(this.auth.getusertype()==rule){\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvc3RhZ2UtTGlzdC9zdGFnZS1MaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SatgesService } from 'src/app/Service/satges.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-stage-List',\r\n  templateUrl: './stage-List.component.html',\r\n  styleUrls: ['./stage-List.component.css']\r\n})\r\nexport class StageListComponent implements OnInit {\r\n  stages:any;\r\n\r\n  constructor(private stageService:SatgesService,private sharedservice:SharedMethodService,private auth:AuthService) { \r\n    \r\n    var result =this.auth.getusertype();\r\n     if(result!='ADM'){\r\n       this.sharedservice.navigate(\"home\")           \r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.stageService.getListStages().subscribe(\r\n      (data:any)=>{this.stages = data}\r\n    )\r\n  }\r\n\r\n  get(url:string){\r\n    this.sharedservice.navigate(url);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvc3ViamVjdC1saXN0L3N1YmplY3QtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject-list.component.css']\r\n})\r\nexport class SubjectListComponent implements OnInit {\r\n  subjects:any;\r\n  constructor(private subjectService:SbjectService,private sharedservice:SharedMethodService,private auth:AuthService) { \r\n    auth.logOut();\r\n    var result =this.auth.getusertype();\r\n     if(result!='ADM'){\r\n       this.sharedservice.navigate(\"home\")           \r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subjectService.getListSubjects().subscribe(\r\n      (data:any)=>{this.subjects = data}\r\n    )\r\n  }\r\n\r\n  get(url:string){\r\n    this.sharedservice.navigate(url);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvc3ViamVjdE1hdGVyaWFscy9zdWJqZWN0TWF0ZXJpYWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-subjectMaterials',\r\n  templateUrl: './subjectMaterials.component.html',\r\n  styleUrls: ['./subjectMaterials.component.css']\r\n})\r\nexport class SubjectMaterialsComponent implements OnInit {\r\n  subjectId;\r\n  materials:any[]=[];\r\n  constructor(private router:ActivatedRoute,private subjectService:SbjectService,private auth:AuthService) { \r\n    auth.logOut();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subjectId = this.router.snapshot.params['id'];\r\n    this.subjectService.getSubjectMAterial(2).subscribe(\r\n      (data:any)=>{console.log(data)}\r\n    )\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvdXBkYXRlLXVzZXIvdXBkYXRlLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UserListService } from 'src/app/Service/user-list.service';\r\nimport { UserAdd } from 'src/app/models/user-add';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CategoryService } from 'src/app/Service/category.service';\r\nimport { SatgesService } from 'src/app/Service/satges.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\n\r\n@Component({\r\n  selector: 'app-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styleUrls: ['./update-user.component.css']\r\n})\r\nexport class UpdateUserComponent implements OnInit,OnDestroy {\r\n  user:UserAdd= {\r\n    username:\"\",\r\n    first_name:\"\",\r\n    last_name:\"\",\r\n    user_type:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    phone:\"\",\r\n    birth_date: null,\r\n   \r\n    job:\"\",\r\n    stage:null,\r\n    category:null,\r\n    hire_date:null,\r\n    adress:\"\"\r\n  };\r\n  type:any;\r\n  categories:any;\r\n  stages:any;\r\n  studentHidden:boolean = true;\r\n  teacherHidden:boolean = true;\r\n  parentHidden:boolean=true;\r\n\r\n  getcategories(){\r\n    this.ctegorService.getListCategories().subscribe(\r\n      (data:any)=>{this.categories = data}\r\n    )\r\n  }\r\n\r\n  getStages(){\r\n    this.stageService.getListStages().subscribe(\r\n      (data:any)=>{this.stages = data}\r\n    )\r\n  }\r\n\r\n\r\n   \r\n   \r\n  \r\n  constructor(private userl:UserListService, private datePipe: DatePipe,private ctegorService:CategoryService,private stageService:SatgesService,private shareS:SharedMethodService) { \r\n    var data  = localStorage.getItem(\"userDataupdate\");\r\n    this.user = JSON.parse(data);\r\n    this.getval();\r\n    this.selected(this.user.user_type)\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    localStorage.removeItem(\"userDataupdate\");\r\n  }\r\n\r\n  //slect user type and maping values\r\n  selected(value:any){\r\n    if(value == 1)\r\n    {\r\n      this.type= \"ADM\";\r\n      this.studentHidden = this.parentHidden  = this.teacherHidden= true;\r\n    }\r\n  \r\n    if(value == 2)\r\n    {\r\n      this.type = \"STD\";\r\n      this.studentHidden = false;\r\n      this.parentHidden  = this.teacherHidden= true;\r\n      this.user.stage = 0;\r\n        this.getStages();\r\n    }\r\n   \r\n    if(value == 3)\r\n    {\r\n      this.type = \"PAR\";\r\n      this.parentHidden = false;\r\n      this.studentHidden = this.teacherHidden=  true;\r\n    }\r\n    \r\n    if(value == 4)\r\n    {\r\n      this.type = \"TECH\";\r\n      this.teacherHidden = false;\r\n      this.studentHidden = this.parentHidden  = true;\r\n      this.user.category = 0;\r\n        this.getcategories();\r\n    }\r\n    \r\n}\r\n\r\nslectSatge(stage:Number){\r\n \r\n}\r\n\r\n getval(){\r\n   if(this.user.user_type == \"ADM\")\r\n     this.user.user_type = \"1\";\r\n  \r\n     if(this.user.user_type == \"STD\")\r\n     this.user.user_type = \"2\";\r\n   \r\n     if(this.user.user_type == \"PAR\")\r\n     this.user.user_type = \"3\";\r\n    \r\n     if(this.user.user_type == \"TECH\")\r\n     this.user.user_type = \"4\";\r\n }\r\n\r\nupdate(){\r\n  this.selected(this.user.user_type)\r\n  this.user.user_type = this.type;\r\n  console.log(this.user)\r\n  this.userl.updateUser(this.user).subscribe()\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvdXNlcnMtbGlzdC91c2VyLXN1YmovdXNlci1zdWJqLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserSubjectsService } from 'src/app/Service/user-subjects.service';\r\nimport { SbjectService } from 'src/app/Service/sbject.service';\r\n\r\n@Component({\r\n  selector: 'app-user-subj',\r\n  templateUrl: './user-subj.component.html',\r\n  styleUrls: ['./user-subj.component.scss']\r\n})\r\nexport class UserSubjComponent implements OnInit {\r\n  id: Number;\r\n  userSubjects: any[];\r\n  sub:any = {};\r\n  userSub:any[] = [];\r\n  form = new FormData();\r\n  subjects: any;\r\n  constructor(private route: ActivatedRoute, private user_subject: UserSubjectsService, private subjectService: SbjectService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.user_subject.getUserSubjects(this.id).subscribe(\r\n      (data: any) => this.userSubjects = data,\r\n      (error: any) => { },\r\n      () => {\r\n        this.subjectService.getListSubjects().subscribe(\r\n          (data: any) => { this.subjects = data ;console.log(data)}\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  remove(name: string) {\r\n    this.userSubjects.splice(this.userSubjects.indexOf(name), 1);\r\n  }\r\n\r\n  add(subjecttoadd: any) {   \r\n    let itemAlreadyExist = this.userSubjects.find(\r\n      item => item.id === subjecttoadd.id \r\n    );\r\n\r\n    if(itemAlreadyExist){\r\n      alert(\"already added\");\r\n    }\r\n    else{\r\n      this.userSubjects.push(subjecttoadd)   \r\n    }\r\n\r\n    console.log(this.userSub);\r\n  }\r\n\r\n  save(){\r\n    \r\n    var form = new FormData();\r\n    form.append(\"subject\", \"1\");\r\n    \r\n    this.userSubjects.forEach(function (value) {\r\n      form.append(\"subject\", value.id);\r\n      console.log(value.id + value.name);\r\n    });\r\n    this.user_subject.updateUserSubjects(this.id,form)\r\n   }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvdXNlcnMtbGlzdC91c2Vycy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserListService } from 'src/app/Service/user-list.service';\r\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\r\nimport { AuthService } from 'src/app/Service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.scss']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n  users:any;\r\n  userObserver = {\r\n    next: (data: any) => this.getusers(),\r\n    error: (err: string) => console.error('Observer got an error: ' + err),\r\n    complete: () => { },\r\n  };\r\n\r\n  constructor(private userList:UserListService,private sharedservice:SharedMethodService,private auth:AuthService) { \r\n    auth.logOut();\r\n    var result =this.auth.getusertype();\r\n     if(result!='ADM'){\r\n       this.sharedservice.navigate(\"home\")           \r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n        this.getusers();\r\n  }\r\n\r\n  getusers(){\r\n    this.userList.getAllUsers().subscribe(\r\n      (data:any)=>{this.users = data}\r\n    ); \r\n  }\r\n\r\n  get(url:string){\r\n    this.sharedservice.navigate(url);\r\n  }\r\n\r\n  remove(id:number){\r\n    this.userList.removeUser(Number(id)).subscribe(this.userObserver)\r\n  }\r\n\r\n  update(user:any){\r\n    var data = JSON.stringify(user);        \r\n    window.localStorage.setItem(\"userDataupdate\",data); \r\n    this.sharedservice.navigate(\"home/UpdateUser\");\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"modules-pages-pages-module-es5.js"}