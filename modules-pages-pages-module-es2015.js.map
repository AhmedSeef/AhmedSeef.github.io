{"version":3,"sources":["./src/app/modules/pages/add-category/add-category.component.html","./src/app/modules/pages/add-exam/add-exam.component.html","./src/app/modules/pages/add-material/add-material.component.html","./src/app/modules/pages/add-parent/add-parent.component.html","./src/app/modules/pages/add-question/add-question.component.html","./src/app/modules/pages/add-stage/add-stage.component.html","./src/app/modules/pages/add-student/add-student.component.html","./src/app/modules/pages/add-subject/add-subject.component.html","./src/app/modules/pages/add-teacher/add-teacher.component.html","./src/app/modules/pages/add-user/add-user.component.html","./src/app/modules/pages/addSubjectMaterial/addSubjectMaterial.component.html","./src/app/modules/pages/category-list/category-list.component.html","./src/app/modules/pages/dash-board/dash-board.component.html","./src/app/modules/pages/exam-list/exam-list.component.html","./src/app/modules/pages/material-list/material-list.component.html","./src/app/modules/pages/pages/pages.component.html","./src/app/modules/pages/profile/profile.component.html","./src/app/modules/pages/stage-List/stage-List.component.html","./src/app/modules/pages/subject-list/subject-list.component.html","./src/app/modules/pages/subjectMaterials/subjectMaterials.component.html","./src/app/modules/pages/update-user/update-user.component.html","./src/app/modules/pages/users-list/user-subj/user-subj.component.html","./src/app/modules/pages/users-list/users-list.component.html","./src/app/Service/category.service.ts","./src/app/Service/exams.service.ts","./src/app/Service/material.service.ts","./src/app/Service/satges.service.ts","./src/app/Service/sbject.service.ts","./src/app/Service/user-list.service.ts","./src/app/Service/user-subjects.service.ts","./src/app/modules/pages/add-category/add-category.component.scss","./src/app/modules/pages/add-category/add-category.component.ts","./src/app/modules/pages/add-exam/add-exam.component.css","./src/app/modules/pages/add-exam/add-exam.component.ts","./src/app/modules/pages/add-material/add-material.component.css","./src/app/modules/pages/add-material/add-material.component.ts","./src/app/modules/pages/add-parent/add-parent.component.scss","./src/app/modules/pages/add-parent/add-parent.component.ts","./src/app/modules/pages/add-question/add-question.component.css","./src/app/modules/pages/add-question/add-question.component.ts","./src/app/modules/pages/add-stage/add-stage.component.css","./src/app/modules/pages/add-stage/add-stage.component.ts","./src/app/modules/pages/add-student/add-student.component.scss","./src/app/modules/pages/add-student/add-student.component.ts","./src/app/modules/pages/add-subject/add-subject.component.scss","./src/app/modules/pages/add-subject/add-subject.component.ts","./src/app/modules/pages/add-teacher/add-teacher.component.scss","./src/app/modules/pages/add-teacher/add-teacher.component.ts","./src/app/modules/pages/add-user/add-user.component.scss","./src/app/modules/pages/add-user/add-user.component.ts","./src/app/modules/pages/addSubjectMaterial/addSubjectMaterial.component.css","./src/app/modules/pages/addSubjectMaterial/addSubjectMaterial.component.ts","./src/app/modules/pages/category-list/category-list.component.css","./src/app/modules/pages/category-list/category-list.component.ts","./src/app/modules/pages/dash-board/dash-board.component.scss","./src/app/modules/pages/dash-board/dash-board.component.ts","./src/app/modules/pages/exam-list/exam-list.component.css","./src/app/modules/pages/exam-list/exam-list.component.ts","./src/app/modules/pages/material-list/material-list.component.css","./src/app/modules/pages/material-list/material-list.component.ts","./src/app/modules/pages/pages-routing.module.ts","./src/app/modules/pages/pages.module.ts","./src/app/modules/pages/pages/pages.component.scss","./src/app/modules/pages/pages/pages.component.ts","./src/app/modules/pages/profile/profile.component.css","./src/app/modules/pages/profile/profile.component.ts","./src/app/modules/pages/stage-List/stage-List.component.css","./src/app/modules/pages/stage-List/stage-List.component.ts","./src/app/modules/pages/subject-list/subject-list.component.css","./src/app/modules/pages/subject-list/subject-list.component.ts","./src/app/modules/pages/subjectMaterials/subjectMaterials.component.css","./src/app/modules/pages/subjectMaterials/subjectMaterials.component.ts","./src/app/modules/pages/update-user/update-user.component.css","./src/app/modules/pages/update-user/update-user.component.ts","./src/app/modules/pages/users-list/user-subj/user-subj.component.scss","./src/app/modules/pages/users-list/user-subj/user-subj.component.ts","./src/app/modules/pages/users-list/users-list.component.scss","./src/app/modules/pages/users-list/users-list.component.ts"],"names":[],"mappings":"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","file":"modules-pages-pages-module-es2015.js","sourcesContent":["export default \"\\n<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Add Ctegory</p>\\n  \\n      <form #catForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCategory()\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Category name\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"category.name\\\"\\n          required #name=\\\"ngModel\\\">         \\n        </div>\\n\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Add Exam</p>\\n  \\n      <form #catForm=\\\"ngForm\\\" (ngSubmit)=\\\"addExam()\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam title\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\"\\n          required #title=\\\"ngModel\\\">         \\n        </div>\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam duration\\\" type=\\\"number\\\" name=\\\"duration\\\" [(ngModel)]=\\\"model.duration\\\"\\n          required #duration=\\\"ngModel\\\">         \\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam mark\\\" type=\\\"number\\\" name=\\\"mark\\\" [(ngModel)]=\\\"model.mark\\\"\\n          required #mark=\\\"ngModel\\\">         \\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"exam notes\\\" type=\\\"text\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\"\\n          required #notes=\\\"ngModel\\\">         \\n        </div>\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"<div class=\\\"register-box\\\">\\n  <div class=\\\"register-box-body\\\">\\n    <p class=\\\"login-box-msg\\\">Add Subject</p>\\n\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMaterial()\\\" enctype=\\\"multipart/form-data\\\">\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\"\\n          tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\" name=\\\"subject\\\" [(ngModel)]=\\\"model.subject\\\" required #subject=\\\"ngModel\\\"\\n          (change)=\\\"setSubject($event.target.value)\\\">\\n          <option [value]=\\\"0\\\" disabled>Select subject</option>\\n          <option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.id\\\">\\n            {{subject.name}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"title\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\"\\n        required #title=\\\"ngModel\\\">         \\n      </div>\\n\\n      \\n      <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".pdf,.doc,.docx\\\">\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"notes\\\" type=\\\"text\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\"\\n        required #notes=\\\"ngModel\\\">         \\n      </div>\\n\\n\\n\\n\\n      <div class=\\\"row\\\">\\n        <!-- /.col -->\\n        <div class=\\\"col-xs-4 col-md-6\\\">\\n          <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\n        </div>\\n        <!-- /.col -->\\n      </div>\\n    </form>\\n  </div>\\n  <!-- /.form-box -->\\n</div>\\n\\n<div class=\\\"loader\\\" [hidden]=\\\"loaderHidden\\\"></div> \\n\\n\"","export default \"<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Register a new parent</p>\\n  \\n      <form action=\\\"../../index.html\\\" method=\\\"post\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"S S N\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-addon\\\">\\n              <i class=\\\"fa fa-calendar\\\"></i>\\n            </div>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Adress\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"Job\\\" type=\\\"text\\\">\\n            <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n          </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Retype password\\\" type=\\\"password\\\">\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\n        </div>\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Register</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"<div class=\\\"box\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"row\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">code</th>\\n            <th scope=\\\"col\\\">title</th>\\n            <th scope=\\\"col\\\">duration</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <th scope=\\\"row\\\">{{exam.id}}</th>\\n            <td>{{exam.title}}</td>\\n            <td>{{exam.duration}} hours</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"row\\\">\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <br> <br>\\n      <h2>exam questions</h2>\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">code</th>\\n            <th scope=\\\"col\\\">title</th>\\n            <th scope=\\\"col\\\">mark</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let que of questions\\\">\\n            <th scope=\\\"row\\\">{{que.id}}</th>\\n            <td>{{que.content}}</td>\\n            <td>{{que.mark}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"register-box\\\">\\n        <div class=\\\"register-box-body\\\">\\n          <p class=\\\"login-box-msg\\\">Add Question</p>\\n\\n          <form #question=\\\"ngForm\\\" (ngSubmit)=\\\"addQuestion()\\\">\\n            <div class=\\\"form-group has-feedback\\\">\\n              <input class=\\\"form-control\\\" placeholder=\\\"question content\\\" type=\\\"text\\\" name=\\\"content\\\"\\n                [(ngModel)]=\\\"model.content\\\" minlength=\\\"5\\\" required #content=\\\"ngModel\\\">\\n              <div *ngIf=\\\"!content.valid && (content.touched ||content.dirty )\\\" class=\\\"alert-danger\\\">\\n                <div *ngIf=\\\"content?.errors.minlength\\\">\\n                  Name must be at least 5 characters long.\\n                </div>\\n                <div *ngIf=\\\"content?.errors.required\\\">\\n                  content must entered.\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group has-feedback\\\">\\n              <input class=\\\"form-control\\\" placeholder=\\\"question mark\\\" type=\\\"number\\\" name=\\\"mark\\\" [(ngModel)]=\\\"model.mark\\\"\\n                required #mark=\\\"ngModel\\\">\\n            </div>\\n            <div *ngIf=\\\"!mark.valid && (mark.touched ||mark.dirty )\\\" class=\\\"alert-danger\\\">\\n              \\n              <div *ngIf=\\\"mark?.errors.required\\\">\\n                mark must entered.\\n              </div>\\n            </div>\\n            <!-- /.col -->\\n            <div class=\\\"col-xs-4 col-md-6\\\">\\n              <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\"\\n              [disabled]=\\\"!question.valid\\\">Add</button>\\n            </div>\\n            <!-- /.col -->\\n\\n          </form>\\n        </div>\\n        <!-- /.form-box -->\\n      </div>\\n      <!-- /.register-box -->\\n    </div>\\n  </div>\\n</div>\"","export default \"\\n<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Add Stage</p>\\n  \\n      <form #catForm=\\\"ngForm\\\" (ngSubmit)=\\\"addStage()\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"satge name\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"stage.name\\\"\\n          required #name=\\\"ngModel\\\">         \\n        </div>\\n\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Register a new student</p>\\n  \\n      <form action=\\\"../../index.html\\\" method=\\\"post\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"S S N\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n            <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\n                <option selected=\\\"selected\\\" data-select2-id=\\\"3\\\">select parent</option>\\n                <option>Alaska</option>\\n                <option>California</option>\\n                <option>Delaware</option>\\n                <option>Tennessee</option>\\n                <option>Texas</option>\\n                <option>Washington</option>\\n              </select>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-addon\\\">\\n              <i class=\\\"fa fa-calendar\\\"></i>\\n            </div>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Adress\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Retype password\\\" type=\\\"password\\\">\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\n        </div>\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Register</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"\\n<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Add Subject</p>\\n  \\n      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addSubject()\\\">\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"subject name\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"subject.name\\\"\\n          required #name=\\\"ngModel\\\">         \\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"credit hour\\\" type=\\\"number\\\" min=\\\"0\\\"\\n            name=\\\"credit_hours\\\" [(ngModel)]=\\\"subject.credit_hours\\\" required #credit_hours=\\\"ngModel\\\">         \\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n            <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\"\\n            name=\\\"stage\\\" [(ngModel)]=\\\"subject.stage\\\" required #stage=\\\"ngModel\\\" (change)=\\\"setStage($event.target.value)\\\">\\n            <option [value]=\\\"0\\\" disabled>Select  satge</option>\\n            <option *ngFor=\\\"let stage of satges\\\" [value]=\\\"stage.id\\\">\\n              {{stage.name}}\\n            </option>               \\n              </select>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <select class=\\\"form-control select2 select2-hidden-accessible\\\" style=\\\"width: 100%;\\\" data-select2-id=\\\"1\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\"\\n          name=\\\"category\\\" [(ngModel)]=\\\"subject.category\\\" required #category=\\\"ngModel\\\" (change)=\\\"setcategory($event.target.value)\\\" >\\n          <option [value]=\\\"0\\\" disabled>Select  category</option>\\n          <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n            {{category.name}}\\n          </option>                            \\n            </select>\\n      </div>\\n\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n \"","export default \"<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">Register a new teacher</p>\\n  \\n      <form action=\\\"../../index.html\\\" method=\\\"post\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"S S N\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-addon\\\">\\n              <i class=\\\"fa fa-calendar\\\"></i>\\n            </div>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Adress\\\" type=\\\"text\\\">\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n        </div>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Retype password\\\" type=\\\"password\\\">\\n          <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span>\\n        </div>\\n        <div class=\\\"row\\\">         \\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Register</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"<div class=\\\"register-box\\\">\\n  <div class=\\\"register-box-body\\\">\\n    <p class=\\\"login-box-msg\\\">Register a new membership Admin</p>\\n\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"user name\\\" type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\n          required #username=\\\"ngModel\\\">\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n      </div>\\n\\n      <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n        <div *ngIf=\\\"username.errors.required\\\">\\n          User Name is required.\\n        </div>\\n\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <select class=\\\"form-control\\\" name=\\\"user_type\\\" (change)=\\\"selected($event.target.value)\\\"\\n          [(ngModel)]=\\\"user.user_type\\\" required  #user_type=\\\"ngModel\\\" >\\n          <option disabled [value]=\\\"0\\\">select user type</option>\\n          <option [value]='1'>ADMIN</option>\\n          <option [value]=\\\"2\\\"> STUDENT</option>\\n          <option [value]=\\\"3\\\">PARENT</option>\\n          <option [value]=\\\"4\\\">TEACHER</option>\\n        </select>\\n      </div>\\n      <div *ngIf=\\\"user_type.invalid && (user_type.dirty || user_type.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n        <div *ngIf=\\\"user_type.errors.required\\\">\\n          User Type is required.\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\" name=\\\"first_name\\\"\\n          [(ngModel)]=\\\"user.first_name\\\">\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\">\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n      </div>\\n\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\">\\n        <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\" name=\\\"phone\\\" [(ngModel)]=\\\"user.phone\\\">\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-addon\\\">\\n            <i class=\\\"fa fa-calendar\\\"></i>\\n          </div>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'yyyy/dd/mm/'\\\" data-mask=\\\"\\\" name=\\\"birth_date\\\"\\n            [(ngModel)]=\\\"user.birth_date\\\" required #birth_date=\\\"ngModel\\\"> \\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"birth_date.invalid && (birth_date.dirty || birth_date.touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"birth_date.errors.required\\\">\\n          birth date is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Address\\\" type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"user.address\\\">\\n        <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\n      </div>\\n\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" \\n        [(ngModel)]=\\\"user.password\\\"  required #password=\\\"ngModel\\\">\\n        <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n      </div>\\n      <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"password.errors.required\\\">\\n          PAssword Name is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [hidden]=\\\"studentHidden\\\">\\n        <select class=\\\"form-control\\\" name=\\\"stage_id\\\" \\n          [(ngModel)]=\\\"user.stage\\\">\\n          <option [value]=\\\"0\\\" selected>select student stage</option>\\n          <option *ngFor=\\\"let stage of stages\\\" [value]=\\\"stage.id\\\">\\n            {{stage.name}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [hidden]=\\\"teacherHidden\\\">\\n        <select class=\\\"form-control\\\" name=\\\"category\\\" (change)=\\\"setcategory($event.target.value)\\\"\\n          [(ngModel)]=\\\"user.category\\\">\\n          <option [value]=\\\"0\\\" selected>select category</option>\\n          <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\n            {{category.name}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"teacherHidden\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-addon\\\">\\n            <i class=\\\"fa fa-calendar\\\"></i>\\n          </div>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\" name=\\\"hire_date\\\"\\n            [(ngModel)]=\\\"user.hire_date\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"parentHidden\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"job\\\" type=\\\"text\\\" name=\\\"job\\\" [(ngModel)]=\\\"user.job\\\">\\n        <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n      </div>\\n\\n\\n      <div class=\\\"row\\\">\\n        <!-- /.col -->\\n        <div class=\\\"col-xs-4 col-md-6\\\">\\n          <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\" \\n         [disabled]=\\\"!registerForm.valid\\\">Register</button>\\n        </div>\\n        <!-- /.col -->\\n      </div>\\n\\n\\n    </form>\\n  </div>\\n  <!-- /.form-box -->\\n</div>\\n<!-- /.register-box -->\"","export default \"<div class=\\\"register-box\\\">\\n  <div class=\\\"register-box-body\\\">\\n    <p class=\\\"login-box-msg\\\">Add Subject</p>\\n\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMaterial()\\\" enctype=\\\"multipart/form-data\\\">\\n\\n     \\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"title\\\" type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\"\\n        required #title=\\\"ngModel\\\">         \\n      </div>\\n\\n      \\n      <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".pdf,.doc,.docx\\\">\\n\\n      <div class=\\\"form-group has-feedback\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"notes\\\" type=\\\"text\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\"\\n        required #notes=\\\"ngModel\\\">         \\n      </div>\\n\\n\\n\\n\\n      <div class=\\\"row\\\">\\n        <!-- /.col -->\\n        <div class=\\\"col-xs-4 col-md-6\\\">\\n          <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\">Add</button>\\n        </div>\\n        <!-- /.col -->\\n      </div>\\n    </form>\\n  </div>\\n  <!-- /.form-box -->\\n</div>\\n\\n\"","export default \"<br>\\n<br>\\n<br>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addcategory')\\\">create category</button>\\n<br> <br> <br>\\n<div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n            \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\"\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">id</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    name</th>\\n                                \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let cat of categories\\\">\\n                                <td class=\\\"sorting_1\\\">{{cat.id}}</td>\\n                                <td>{{cat.name}}</td>                                \\n                                <!-- <td>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\n                                </td> -->\\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                            <tr>\\n                                \\n                            </tr>\\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","export default \"<section class=\\\"content-header\\\">\\n  <!-- <h1>\\n    Blank page\\n    <small>it all starts here</small>\\n  </h1>\\n  <ol class=\\\"breadcrumb\\\">\\n    <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n    <li><a href=\\\"#\\\">Examples</a></li>\\n    <li class=\\\"active\\\">Blank page</li>\\n  </ol> -->\\n</section>\\n\\n<!-- Main content -->\\n<section class=\\\"content\\\">\\n\\n  <router-outlet></router-outlet>\\n\\n\\n</section>\\n<!-- /.content -->\\n\"","export default \"<br>\\n<br>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addexam')\\\">create exam</button> \\n<br> <br> <br>\\n<div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n            \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\"\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">id</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"title: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    title</th>\\n                                \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let exam of exams\\\">\\n                                <td class=\\\"sorting_1\\\">{{exam.id}}</td>\\n                                <td>{{exam.title}}</td>                                \\n                                <td>                                   \\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"select(exam)\\\">add questions</button>\\n                                </td> \\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                            <tr>\\n                                \\n                            </tr>\\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","export default \"<br>\\n<br>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addmaterial')\\\">create Material</button>\\n<br> <br> <br>\\n\\n\\n  <div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n            \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\"\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">id</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    name</th>\\n                                \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let material of materials\\\">\\n                                <td class=\\\"sorting_1\\\">{{material.title}}</td>\\n                                <td><a href=\\\"{{material.path}}\\\" download>Download the file</a></td> \\n                                <td>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(material.id)\\\">Delete</button>                                    \\n                                </td> \\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                            <tr>\\n                                \\n                            </tr>\\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","export default \"<div class=\\\"wrapper\\\">\\n  <app-header></app-header>\\n   <app-side-nav></app-side-nav> \\n  <div class=\\\"content-wrapper\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  \\n</div>\\n\"","export default \"<div class=\\\"box\\\">\\n  <!-- /.box-header -->\\n  <div class=\\\"box-body\\\">\\n      <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n          \\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                  <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                      aria-describedby=\\\"example1_info\\\">\\n                      <thead>\\n                          <tr role=\\\"row\\\">\\n                              <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                  aria-sort=\\\"ascending\\\"\\n                                  aria-label=\\\"user name: activate to sort column descending\\\"\\n                                  style=\\\"width: 182px;\\\">id</th>\\n                              <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                  aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                  name</th>\\n                              \\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let subject of subjects\\\">\\n                              <td class=\\\"sorting_1\\\">{{subject.id}}</td>\\n                              <td>{{subject.name}}</td>                                \\n                              <td>                                   \\n                                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\"  [routerLink]=\\\"['../subjectMaterials/',subject.id]\\\">get materials</button>\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['../addSubjectMaterials/',subject.id]\\\"\\n                                  *ngIf=\\\"checkRule('TECH')==true\\\">add materials</button>\\n                              </td> \\n                          </tr>\\n                      </tbody>\\n                      <tfoot>\\n                          <tr>\\n                              \\n                          </tr>\\n                      </tfoot>\\n                  </table>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n  <!-- /.box-body -->\\n</div>\"","export default \"\\n<br>\\n<br>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addstage')\\\">create satge</button>\\n<br> <br> <br>\\n<div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n            \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\"\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">id</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    name</th>\\n                                \\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let satge of stages\\\">\\n                                <td class=\\\"sorting_1\\\">{{satge.id}}</td>\\n                                <td>{{satge.name}}</td>                                \\n                                <!-- <td>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\n                                </td> -->\\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                            <tr>\\n                                \\n                            </tr>\\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","export default \"<br>\\n<br>\\n<br>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/addsubject')\\\">create subject</button>\\n<br> <br> <br>\\n<div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\" aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">id</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    name</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"stage: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    stage</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"category: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    category</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"credit_hours: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    credit_hours</th>\\n\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let subject of subjects\\\">\\n                                <td class=\\\"sorting_1\\\">{{subject.id}}</td>\\n                                <td>{{subject.name}}</td>\\n                                <td>{{subject.category.name}}</td>\\n                                <td>{{subject.stage.name}}</td>\\n                                <td>{{subject.credit_hours}}</td>\\n\\n                                <!-- <td>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\n                                </td> -->\\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                            <tr>\\n                                <th rowspan=\\\"1\\\" colspan=\\\"1\\\">id</th>\\n                                <th rowspan=\\\"1\\\" colspan=\\\"1\\\">name</th>\\n\\n                            </tr>\\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","export default \"\"","export default \"<br><br>\\n<br><br>\\n\\n\\n<div class=\\\"register-box\\\">    \\n    <div class=\\\"register-box-body\\\">\\n      <p class=\\\"login-box-msg\\\">update user</p>\\n  \\n      <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"update()\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"user name\\\" type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\n            required #username=\\\"ngModel\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n  \\n        <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\n  \\n          <div *ngIf=\\\"username.errors.required\\\">\\n            User Name is required.\\n          </div>\\n  \\n        </div>\\n  \\n  \\n        <div class=\\\"form-group\\\">\\n          <select class=\\\"form-control\\\" name=\\\"user_type\\\" (change)=\\\"selected($event.target.value)\\\"\\n            [(ngModel)]=\\\"user.user_type\\\" required  #user_type=\\\"ngModel\\\" >\\n            <option disabled selected>select user type</option>\\n            <option [value]='1'>ADMIN</option>\\n            <option [value]=\\\"2\\\"> STUDENT</option>\\n            <option [value]=\\\"3\\\">PARENT</option>\\n            <option [value]=\\\"4\\\">TEACHER</option>\\n          </select>\\n        </div>\\n        <div *ngIf=\\\"user_type.invalid && (user_type.dirty || user_type.touched)\\\" class=\\\"alert alert-danger\\\">\\n  \\n          <div *ngIf=\\\"user_type.errors.required\\\">\\n            User Type is required.\\n          </div>\\n  \\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"First name\\\" type=\\\"text\\\" name=\\\"first_name\\\"\\n            [(ngModel)]=\\\"user.first_name\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Last name\\\" type=\\\"text\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n  \\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\">\\n          <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"telephone\\\" type=\\\"tel\\\" name=\\\"phone\\\" [(ngModel)]=\\\"user.phone\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-addon\\\">\\n              <i class=\\\"fa fa-calendar\\\"></i>\\n            </div>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'yyyy/dd/mm/'\\\" data-mask=\\\"\\\" name=\\\"birth_date\\\"\\n              [(ngModel)]=\\\"user.birth_date\\\" required #birth_date=\\\"ngModel\\\"> \\n          </div>\\n        </div>\\n  \\n        <div *ngIf=\\\"birth_date.invalid && (birth_date.dirty || birth_date.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"birth_date.errors.required\\\">\\n            User Name is required.\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Address\\\" type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"user.address\\\">\\n          <span class=\\\"glyphicon glyphicon-map-marker form-control-feedback\\\"></span>\\n        </div>\\n  \\n  \\n        <div class=\\\"form-group has-feedback\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" \\n          [(ngModel)]=\\\"user.password\\\"  required #password=\\\"ngModel\\\">\\n          <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n        </div>\\n        <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">\\n            User Name is required.\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\" [hidden]=\\\"studentHidden\\\">\\n          <select class=\\\"form-control\\\" name=\\\"stage_id\\\" (change)=\\\"slectSatge($event.target.value)\\\"\\n            [(ngModel)]=\\\"user.stage\\\">\\n            <option [value]=\\\"0\\\" selected>select student stage</option>\\n            <option *ngFor=\\\"let stage of stages\\\" [value]=\\\"stage.id\\\" [selected]=\\\"stage.id\\\">\\n              {{stage.name}}\\n            </option>\\n          </select>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\" [hidden]=\\\"teacherHidden\\\">\\n          <select class=\\\"form-control\\\" name=\\\"category\\\" (change)=\\\"selected($event.target.value)\\\"\\n            [(ngModel)]=\\\"user.category\\\">\\n            <option [value]=\\\"0\\\" selected>select category</option>\\n            <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\" [selected]=\\\"category.id\\\">\\n              {{category.name}}\\n            </option>\\n          </select>\\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"teacherHidden\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-addon\\\">\\n              <i class=\\\"fa fa-calendar\\\"></i>\\n            </div>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" data-inputmask=\\\"'alias': 'dd/mm/yyyy'\\\" data-mask=\\\"\\\" name=\\\"hire_date\\\"\\n              [(ngModel)]=\\\"user.hire_date\\\">\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group has-feedback\\\" [hidden]=\\\"parentHidden\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"job\\\" type=\\\"text\\\" name=\\\"job\\\" [(ngModel)]=\\\"user.job\\\">\\n          <span class=\\\"glyphicon glyphicon-user form-control-feedback\\\"></span>\\n        </div>\\n  \\n  \\n        <div class=\\\"row\\\">\\n          <!-- /.col -->\\n          <div class=\\\"col-xs-4 col-md-6\\\">\\n            <button class=\\\"btn btn-primary btn-block btn-flat\\\" type=\\\"submit\\\" \\n           [disabled]=\\\"!registerForm.valid\\\">Register</button>\\n          </div>\\n          <!-- /.col -->\\n        </div>\\n  \\n  \\n      </form>    \\n    </div>\\n    <!-- /.form-box -->\\n  </div>\\n  <!-- /.register-box -->\\n  \"","export default \"<br>\\n<br>\\n<br>\\n<div class=\\\"form-group\\\" >\\n    <select class=\\\"form-control\\\">\\n      <option [value]=\\\"0\\\" selected>add subject</option>\\n      <option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.id\\\" (click) = \\\"add(subject)\\\"> \\n        {{subject.name}}\\n      </option>\\n    </select>\\n  </div>\\n\\n<div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\" aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">id</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"name: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    name</th>\\n                                <th>\\n\\n                                </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let subject of userSubjects\\\">\\n                                <td class=\\\"sorting_1\\\">{{subject.id}}</td>\\n                                <td>{{subject.name}}</td>\\n                                \\n                                <td>\\n                                    <button class=\\\"danger\\\" (click)=\\\"remove(subject.name)\\\">Delete</button>\\n                                </td>\\n                                \\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                           \\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Save</button>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","export default \"<br>\\n<br>\\n<br>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"get('/home/adduser')\\\">create user</button>\\n<br> <br> <br>\\n<div class=\\\"box\\\">\\n    <!-- /.box-header -->\\n    <div class=\\\"box-body\\\">\\n        <div id=\\\"example1_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n            \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped dataTable\\\" role=\\\"grid\\\"\\n                        aria-describedby=\\\"example1_info\\\">\\n                        <thead>\\n                            <tr role=\\\"row\\\">\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-sort=\\\"ascending\\\"\\n                                    aria-label=\\\"user name: activate to sort column descending\\\"\\n                                    style=\\\"width: 182px;\\\">user name</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"email: activate to sort column ascending\\\" style=\\\"width: 225px;\\\">\\n                                    email</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"user type: activate to sort column ascending\\\" style=\\\"width: 199px;\\\">\\n                                    user type</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"is superuser: activate to sort column ascending\\\"\\n                                    style=\\\"width: 156px;\\\">is superuser</th>\\n                                <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"example1\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\"\\n                                    aria-label=\\\"CSS grade: activate to sort column ascending\\\" style=\\\"width: 113px;\\\">Actions\\n                                    </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr role=\\\"row\\\" class=\\\"even\\\" *ngFor=\\\"let user of users\\\">\\n                                <td class=\\\"sorting_1\\\">{{user.username}}</td>\\n                                <td>{{user.email}}</td>\\n                                <td>{{user.user_type}}</td>\\n                                <td>{{user.is_superuser}}</td>\\n                                <td>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"remove(user.id)\\\">Delete</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"update(user)\\\">Update</button>\\n                                    <a type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/home/user-subj', user.id]\\\">subjects</a>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                        <tfoot>\\n                            \\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /.box-body -->\\n</div>\"","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/categorys/\";\n  token =JSON.parse(localStorage.getItem('token'));\n  headers_object;\n\n  httpOptions;\n\n  constructor(private http:HttpClient) { \n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n       'Authorization': \"token \"+ this.token \n    });\n  \n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  }\n\n  getListCategories(){\n   return this.http.get(this.baseUrl,this.httpOptions)\n  }\n\n  addCategory(category:any){\n    return this.http.post(this.baseUrl,category,this.httpOptions)\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamsService {\n\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/exams/\";\n  token =JSON.parse(localStorage.getItem('token'));\n  headers_object;\n\n  httpOptions;\n\n  constructor(private http:HttpClient) { \n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n       'Authorization': \"token \"+ this.token \n    });\n  \n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  }\n\n  addExam(exam){\n    return this.http.post(this.baseUrl,exam,this.httpOptions);\n  }\n\n  getExam(id:Number){\n    return this.http.get(this.baseUrl+id,this.httpOptions);\n  }\n\n  getAllExam(){\n    return this.http.get(this.baseUrl,this.httpOptions);\n  }\n\n  addQuestions(id:Number,question){\n    return this.http.post(this.baseUrl+id+\"/addQuestions/\",question,this.httpOptions);\n  }\n\n  getExamQuestions(id){\n    return this.http.get(this.baseUrl+id+\"/questions\" , this.httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Material } from '../models/material';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialService {\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/materials/\";\n  token = JSON.parse(localStorage.getItem('token'));\n  headers_object;\n\n  httpOptions;\n\n  constructor(private http: HttpClient) {\n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': \"token \" + this.token\n    });\n    this.headers_object.append('enctype', 'multipart/form-data');\n    this.headers_object.set('Content-Type', 'false');\n    this.headers_object.set('mimeType', 'application/json');\n\n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  }\n\n  getList() {\n    return this.http.get(this.baseUrl, this.httpOptions);\n  }\n\n  save(material) {\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Token \" + this.token);\n\n\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: material,\n\n    };\n    return fetch(\"https://smart-school-project.herokuapp.com/api/materials/\", requestOptions)\n\n  }\n\n  remove(id:Number){\n    return this.http.delete(this.baseUrl+id,this.httpOptions);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SatgesService {\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/stages/\";\n  token =JSON.parse(localStorage.getItem('token'));\n  headers_object;\n\n  httpOptions;\n\n  constructor(private http:HttpClient) { \n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n       'Authorization': \"token \"+ this.token \n    });\n  \n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  }\n\n  getListStages(){\n    return this.http.get(this.baseUrl,this.httpOptions)\n   }\n\n   addStage(satge:any){\n    return this.http.post(this.baseUrl,satge,this.httpOptions)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SbjectService {\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/subjects/\";\n  token =JSON.parse(localStorage.getItem('token'));\n  headers_object;\n  httpOptions;\n\n\n  constructor(private http:HttpClient) { \n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n       'Authorization': \"token \"+ this.token \n    });\n  \n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  }\n\n  getListSubjects(){\n    return this.http.get(this.baseUrl,this.httpOptions)\n   }\n\n   addSsubject(subject:any){\n    return this.http.post(this.baseUrl,subject,this.httpOptions)\n  }\n\n  getUserSubjects(id:Number){\n    return this.http.get(\"https://smart-school-project.herokuapp.com/api/users/\"+id+\"/subjects\",this.httpOptions)\n  }\n\n  getSubjectMAterial(id:Number){\n    return this.http.get(\"https://smart-school-project.herokuapp.com/api/subjects/\"+id+\"/materials\",this.httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserListService {\n  users:any;\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/\";\n  token =JSON.parse(localStorage.getItem('token'));\n\n  headers_object;\n\n  httpOptions;\n\n\n  constructor(private http:HttpClient) { \n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n       'Authorization': \"token \"+ this.token \n    });\n  \n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  \n  }\n\n  getAllUsers(){    \n    return this.http.get(this.baseUrl + \"users\",this.httpOptions)    \n  }\n\n  registerUser(user:any){    \n    return this.http.post(\"https://smart-school-project.herokuapp.com/api/users/\",user,this.httpOptions) \n  }\n\n  removeUser(id:number){\n    id = Number(id);\n    return this.http.delete(this.baseUrl + \"users/\"+id,this.httpOptions) \n  }\n\n  updateUser(user:any){\n    return this.http.patch(this.baseUrl + \"users/\" +Number(user.id),user,this.httpOptions) \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSubjectsService {\n\n  baseUrl = \"https://smart-school-project.herokuapp.com/api/users/\";\n  token = JSON.parse(localStorage.getItem('token'));\n  headers_object;\n\n  httpOptions;\n\n  constructor(private http: HttpClient) {\n    this.headers_object = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': \"token \" + this.token\n    });\n\n    this.httpOptions = {\n      headers: this.headers_object\n    };\n  }\n\n  getUserSubjects(id: Number) {\n    return this.http.get(this.baseUrl + id + \"/subjects\", this.httpOptions);\n  }\n\n  updateUserSubjects(id: Number, subjects: FormData) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"token \" + this.token);\n\n    var requestOptions = {\n      method: 'PATCH',\n      headers: myHeaders,\n      body: subjects\n    };\n\n    fetch(\"https://smart-school-project.herokuapp.com/api/users/\" + id + \"/\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLWNhdGVnb3J5L2FkZC1jYXRlZ29yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { CategoryService } from 'src/app/Service/category.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.scss']\n})\nexport class AddCategoryComponent implements OnInit {\ncategory:Category ={\n  name:\"\"\n}\n  constructor(private categoryService:CategoryService,private sharedSevice:SharedMethodService,private auth:AuthService) { \n    this.auth.logOut();\n    var result =this.auth.getusertype();\n     if(result!='ADM'){\n       this.sharedSevice.navigate(\"home\")           \n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addCategory(){\n    this.categoryService.addCategory(this.category).subscribe(\n      ()=>{\n        this.sharedSevice.navigate(\"/home/categories\")\n      }\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLWV4YW0vYWRkLWV4YW0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ExamsService } from 'src/app/Service/exams.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-add-exam',\n  templateUrl: './add-exam.component.html',\n  styleUrls: ['./add-exam.component.css']\n})\nexport class AddExamComponent implements OnInit {\nmodel:any = {};\n  constructor(private examService:ExamsService,private sharedservice:SharedMethodService,private auth:AuthService) { \n    auth.logOut();\n  }\n\n  ngOnInit() {\n  }\n\n  addExam(){\n    this.examService.addExam(this.model).subscribe(\n      ()=>{alert(\"added success\");this.sharedservice.navigate(\"home/exams\")}\n    )\n  }\n}\n","export default \".loader {\\n    border: 25px solid #f3f3f3; /* Light grey */\\n    border-top: 25px solid #3498db; /* Blue */\\n    border-radius: 50%;\\n    width: 240px;\\n    height: 240px;\\n    -webkit-animation: spin 2s linear infinite;\\n            animation: spin 2s linear infinite;\\n    position: absolute;\\n    top:32%;\\n    left: 44%;\\n   \\n  }\\n  \\n  @-webkit-keyframes spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n  }\\n  \\n  @keyframes spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hZGQtbWF0ZXJpYWwvYWRkLW1hdGVyaWFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEIsRUFBRSxlQUFlO0lBQzNDLDhCQUE4QixFQUFFLFNBQVM7SUFDekMsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixhQUFhO0lBQ2IsMENBQWtDO1lBQWxDLGtDQUFrQztJQUNsQyxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFNBQVM7O0VBRVg7O0VBRUE7SUFDRSxLQUFLLCtCQUF1QixFQUF2Qix1QkFBdUIsRUFBRTtJQUM5QixPQUFPLGlDQUF5QixFQUF6Qix5QkFBeUIsRUFBRTtFQUNwQzs7RUFIQTtJQUNFLEtBQUssK0JBQXVCLEVBQXZCLHVCQUF1QixFQUFFO0lBQzlCLE9BQU8saUNBQXlCLEVBQXpCLHlCQUF5QixFQUFFO0VBQ3BDIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wYWdlcy9hZGQtbWF0ZXJpYWwvYWRkLW1hdGVyaWFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGVyIHtcbiAgICBib3JkZXI6IDI1cHggc29saWQgI2YzZjNmMzsgLyogTGlnaHQgZ3JleSAqL1xuICAgIGJvcmRlci10b3A6IDI1cHggc29saWQgIzM0OThkYjsgLyogQmx1ZSAqL1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB3aWR0aDogMjQwcHg7XG4gICAgaGVpZ2h0OiAyNDBweDtcbiAgICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6MzIlO1xuICAgIGxlZnQ6IDQ0JTtcbiAgIFxuICB9XG4gIFxuICBAa2V5ZnJhbWVzIHNwaW4ge1xuICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { SbjectService } from 'src/app/Service/sbject.service';\nimport { Material } from 'src/app/models/material';\nimport { MaterialService } from 'src/app/Service/material.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-add-material',\n  templateUrl: './add-material.component.html',\n  styleUrls: ['./add-material.component.css']\n})\nexport class AddMaterialComponent implements OnInit {\n  loaderHidden = true;\n  subjects: any = [];\n  model: Material = {\n    subject: 0,\n    material_type: \"pdf\",\n    title: \"\",\n    path: null,\n    notes: \"\"\n  };\n\n  form: FormData = new FormData();\n\n  constructor(private materialService: MaterialService, private subjectService: SbjectService, private auth: AuthService) {\n    auth.logOut();\n  }\n\n  ngOnInit() {\n    this.subjectService.getListSubjects().subscribe(\n      (response: any) => { this.subjects = response }\n    )\n  }\n\n  setSubject(subjectId: number) {\n    this.model.subject = subjectId;\n  }\n\n\n\n  fileChange(event) {\n    let fileList: FileList = event.target.files;\n    if (fileList.length > 0) {\n      let file: File = fileList[0];\n\n      this.form.append(\"subject\", this.model.subject.toString());\n      this.form.append(\"material_type\", \"pdf\");\n      this.form.append(\"title\", this.model.title);\n      this.form.append(\"path\", file, file.name);\n      this.form.append(\"notes\", this.model.notes);\n    }\n  }\n\n  async addMaterial() {\n    this.loaderHidden = false;\n    await this.delay(300);\n    this.materialService.save(this.form).then(response =>{ alert(\"added succefully\");this.loaderHidden=true})\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n    this.loaderHidden = true\n  }\n\n  delay(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXBhcmVudC9hZGQtcGFyZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-parent',\n  templateUrl: './add-parent.component.html',\n  styleUrls: ['./add-parent.component.scss']\n})\nexport class AddParentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXF1ZXN0aW9uL2FkZC1xdWVzdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ExamsService } from 'src/app/Service/exams.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css']\n})\nexport class AddQuestionComponent implements OnInit {\n  exam: any = {};\n  questions:any[] =[];\n  model:any={};\n  questionList:any[]= [];\n  constructor(private examservice:ExamsService,private auth:AuthService) {\n    auth.logOut();\n  this.exam = JSON.parse(localStorage.getItem('examdata'))\n  \n  }\n\n  ngOnInit() {\n    this.examservice.getExamQuestions(1).subscribe(\n      (data:any)=>{this.questions=data.data;console.log(this.questions)}\n    )\n  }\n\n  addQuestion(){\n    this.model.mark = this.model.mark.toString();\n    this.questionList.push(this.model)\n   this.examservice.addQuestions(this.exam.id,this.questionList).subscribe(\n     ()=>{alert(\"done\");\n    this.questions.push(this.model)}\n   )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXN0YWdlL2FkZC1zdGFnZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { SatgesService } from 'src/app/Service/satges.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-add-stage',\n  templateUrl: './add-stage.component.html',\n  styleUrls: ['./add-stage.component.css']\n})\nexport class AddStageComponent implements OnInit {\n\n  stage:Category = {\n    name:\"\"\n  }\n  constructor(private satgeService:SatgesService,private sharedSevice:SharedMethodService,private auth:AuthService) { \n    auth.logOut();\n    var result =this.auth.getusertype();\n     if(result!='ADM'){\n       this.sharedSevice.navigate(\"home\")           \n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addStage(){\n    this.satgeService.addStage(this.stage).subscribe(\n      ()=>{ this.sharedSevice.navigate(\"/home/stages\")}\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXN0dWRlbnQvYWRkLXN0dWRlbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.scss']\n})\nexport class AddStudentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXN1YmplY3QvYWRkLXN1YmplY3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'src/app/models/subject';\nimport { SbjectService } from 'src/app/Service/sbject.service';\nimport { SatgesService } from 'src/app/Service/satges.service';\nimport { CategoryService } from 'src/app/Service/category.service';\nimport { AuthService } from 'src/app/Service/auth.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-subject',\n  templateUrl: './add-subject.component.html',\n  styleUrls: ['./add-subject.component.scss']\n})\nexport class AddSubjectComponent implements OnInit {\n  subject:Subject = {\n    name:\"\",\n    credit_hours:null,\n    stage:0,\n    category:0\n  }\n  satges:any;\n  categories:any;\n\n  satgesObserver = {\n    next: (data: any) => this.satges = data,\n    error: (err: string) => console.error('Observer got an error: ' + err),\n    complete: () => { this.categoryService.getListCategories().subscribe(this.categoryObserver)},\n  };\n\n  categoryObserver = {\n    next: (data: any) => this.categories = data,\n    error: (err: string) => console.error('Observer got an error: ' + err),\n    complete: () => { },\n  };\n\n  constructor(private router:Router,private subjectService:SbjectService,private auth:AuthService,private sharedservice:SharedMethodService,private stageService:SatgesService,private categoryService:CategoryService) { \n    auth.logOut();\n    var result =this.auth.getusertype();\n     if(result!='ADM'){\n       this.sharedservice.navigate(\"home\")           \n    }\n  }\n\n  ngOnInit() {\n    this.stageService.getListStages().subscribe(this.satgesObserver)\n  }\n\n  setStage(stage:any){\n    this.subject.stage = stage;\n  }\n\n  setcategory(cat:any){\n    this.subject.category = cat;\n  }\n\n  addSubject(){\n    this.subjectService.addSsubject(this.subject).subscribe(\n      ()=>{alert(\"Added succesfully\");this.router.navigateByUrl(\"/home/subjects\")}\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXRlYWNoZXIvYWRkLXRlYWNoZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-teacher',\n  templateUrl: './add-teacher.component.html',\n  styleUrls: ['./add-teacher.component.scss']\n})\nexport class AddTeacherComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkLXVzZXIvYWRkLXVzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserListService } from 'src/app/Service/user-list.service';\nimport { UserAdd } from 'src/app/models/user-add';\nimport { DatePipe } from '@angular/common';\nimport { CategoryService } from 'src/app/Service/category.service';\nimport { SatgesService } from 'src/app/Service/satges.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  user:UserAdd= {\n    username:\"\",\n    first_name:\"\",\n    last_name:\"\",\n    user_type:\"0\",\n    email:\"\",\n    password:\"\",\n    phone:\"\",\n    birth_date: null,    \n    job:\"\",\n    stage:null,\n    category:null,\n    hire_date:null,\n    address:\"\"\n  };\n  type:any;\n  categories:any;\n  stages:any;\n  studentHidden:boolean = true;\n  teacherHidden:boolean = true;\n  parentHidden:boolean=true;\n\n  constructor(private userl:UserListService, private datePipe: DatePipe,private ctegorService:CategoryService,private stageService:SatgesService,private shareS:SharedMethodService,private auth:AuthService) { \n    auth.logOut();\n    var result =this.auth.getusertype();\n    if(result!='ADM'){\n      this.shareS.navigate(\"home\")           \n   }\n  }\n\n  ngOnInit() {\n    \n  }\n\n  getcategories(){\n    this.ctegorService.getListCategories().subscribe(\n      (data:any)=>{this.categories = data}\n    )\n  }\n\n  getStages(){\n    this.stageService.getListStages().subscribe(\n      (data:any)=>{this.stages = data}\n    )\n  }\n  //slect user type and maping values\n  selected(value:any){\n    \n      if(value == 1)\n      {\n        this.type= \"ADM\";\n        this.studentHidden = this.parentHidden  = this.teacherHidden= true;\n      }\n    \n      if(value == 2)\n      {\n        this.type = \"STD\";\n        this.studentHidden = false;\n        this.parentHidden  = this.teacherHidden= true;\n        this.user.stage = 0;\n        this.getStages();\n      }\n     \n      if(value == 3)\n      {\n        this.type = \"PAR\";\n        this.parentHidden = false;\n        this.studentHidden = this.teacherHidden=  true;\n      }\n      \n      if(value == 4)\n      {\n        this.type = \"TECH\";\n        this.teacherHidden = false;\n        this.studentHidden = this.parentHidden  = true;\n        this.user.category = 0;\n        this.getcategories();\n      }\n      \n      console.log(this.type)\n  }\n\n  setcategory(cat:Number){\n   this.user.category = Number(cat)\n  }\n\n  register(){\n    console.log(this.user)\n    this.user.user_type = this.type;    \n    var date = this.user.birth_date;\n   var date1 = this.datePipe.transform(date,\"yyyy-MM-dd\"); \n    this.userl.registerUser(this.user).subscribe(\n        (resposnse:any)=>{console.log(resposnse);this.user.user_type = \"0\";this.shareS.navigate(\"/home/users\")}\n      )\n    \n  }\n\n  \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvYWRkU3ViamVjdE1hdGVyaWFsL2FkZFN1YmplY3RNYXRlcmlhbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SbjectService } from 'src/app/Service/sbject.service';\nimport { AuthService } from 'src/app/Service/auth.service';\nimport { Material } from 'src/app/models/material';\nimport { MaterialService } from 'src/app/Service/material.service';\n\n@Component({\n  selector: 'app-addSubjectMaterial',\n  templateUrl: './addSubjectMaterial.component.html',\n  styleUrls: ['./addSubjectMaterial.component.css']\n})\nexport class AddSubjectMaterialComponent implements OnInit {\n  loaderHidden = true;\n  model: Material = {\n    subject: 0,\n    material_type: \"pdf\",\n    title: \"\",\n    path: null,\n    notes: \"\"\n  };\n  form: FormData = new FormData();\n  subjectId;\n  constructor(private materialService: MaterialService, private router: ActivatedRoute, private subjectService: SbjectService, private auth: AuthService) {\n    auth.logOut();\n  }\n\n  ngOnInit() {\n    this.subjectId = this.router.snapshot.params['id'];\n    this.model.subject = this.subjectId;\n  }\n\n  fileChange(event) {\n    let fileList: FileList = event.target.files;\n    if (fileList.length > 0) {\n      let file: File = fileList[0];\n\n      this.form.append(\"subject\", this.model.subject.toString());\n      this.form.append(\"material_type\", \"pdf\");\n      this.form.append(\"title\", this.model.title);\n      this.form.append(\"path\", file, file.name);\n      this.form.append(\"notes\", this.model.notes);\n    }\n  }\n\n  addMaterial() {\n    this.loaderHidden = false;\n    this.delay(5000)\n    this.materialService.save(this.form).then(response => { alert(\"added succefully\");this.loaderHidden=true})\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      this.loaderHidden = true\n  }\n\n  delay(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvY2F0ZWdvcnktbGlzdC9jYXRlZ29yeS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/Service/category.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\nexport class CategoryListComponent implements OnInit {\n  categories:any;\n  constructor(private categoryservice:CategoryService,private sharedservice:SharedMethodService,private auth:AuthService) { \n    auth.logOut();\n    var result =this.auth.getusertype();\n    if(result!='ADM'){\n      this.sharedservice.navigate(\"home\")           \n   }\n  }\n\n  ngOnInit() {\n    this.categoryservice.getListCategories().subscribe(\n      (data:any)=>{this.categories = data}\n    )\n  }\n\n  get(url:string){\n    this.sharedservice.navigate(url);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvZGFzaC1ib2FyZC9kYXNoLWJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-dash-board',\n  templateUrl: './dash-board.component.html',\n  styleUrls: ['./dash-board.component.scss']\n})\nexport class DashBoardComponent implements OnInit {\n\n  constructor(private auth:AuthService) {\n    auth.logOut();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvZXhhbS1saXN0L2V4YW0tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ExamsService } from 'src/app/Service/exams.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-exam-list',\n  templateUrl: './exam-list.component.html',\n  styleUrls: ['./exam-list.component.css']\n})\nexport class ExamListComponent implements OnInit {\n  exams:any[];\n  constructor(private examservice:ExamsService,private sharedservice:SharedMethodService,private auth:AuthService) {\n    auth.logOut();\n   }\n\n  ngOnInit() {\n    this.examservice.getAllExam().subscribe(\n      (data:any)=>{this.exams = data}\n    )\n  }\n\n  get(url){\n    this.sharedservice.navigate(url);\n    \n  }\n\n  select(exam){    \n    localStorage.setItem('examdata', JSON.stringify(exam));\n    this.sharedservice.navigate('/home/addquestion')\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvbWF0ZXJpYWwtbGlzdC9tYXRlcmlhbC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { MaterialService } from 'src/app/Service/material.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-material-list',\n  templateUrl: './material-list.component.html',\n  styleUrls: ['./material-list.component.css']\n})\nexport class MaterialListComponent implements OnInit {\n\n  materialObserver = {\n    next: (data: any) => this.getMaterials(),\n    error: (err: string) => console.error('Observer got an error: ' + err),\n    complete: () => {this.materials.splice(this.materials.indexOf(this.matrialId), 1); },\n  };\n\n  materials:any;\n  matrialId;\n  constructor(private sharedservice:SharedMethodService,private mterialService:MaterialService,private auth:AuthService) { \n    auth.logOut();\n  }\n\n  ngOnInit() {\n    this.getMaterials();\n  }\n  getMaterials(){\n    this.mterialService.getList().subscribe(\n      (data:any)=>{this.materials = data;console.log(data)}\n    )\n  }\n\n  get(url:string){\n    this.sharedservice.navigate(url);\n  }\n\n  remove(id:Number){\n    this.matrialId = id;\n    this.mterialService.remove(id).subscribe(\n      this.materialObserver\n    )\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PagesComponent} from './pages/pages.component';\nimport {DashBoardComponent} from './dash-board/dash-board.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { AddParentComponent } from './add-parent/add-parent.component';\nimport { AddTeacherComponent } from './add-teacher/add-teacher.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { AddCategoryComponent } from './add-category/add-category.component';\nimport { AddSubjectComponent } from './add-subject/add-subject.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { StageListComponent } from './stage-List/stage-List.component';\nimport { AddStageComponent } from './add-stage/add-stage.component';\nimport { SubjectListComponent } from './subject-list/subject-list.component';\n\nimport { UserSubjComponent } from './users-list/user-subj/user-subj.component';\nimport { AddMaterialComponent } from './add-material/add-material.component';\nimport { MaterialListComponent } from './material-list/material-list.component';\nimport { ExamListComponent } from './exam-list/exam-list.component';\nimport { AddExamComponent } from './add-exam/add-exam.component';\nimport { AddQuestionComponent } from './add-question/add-question.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SubjectMaterialsComponent } from './subjectMaterials/subjectMaterials.component';\nimport { AddSubjectMaterialComponent } from './addSubjectMaterial/addSubjectMaterial.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: PagesComponent, children: [\n      {path: '', component: DashBoardComponent},\n      {path:'adduser',component:AddUserComponent},\n      {path:'UpdateUser',component:UpdateUserComponent},\n      {path:'AddParent',component:AddParentComponent},\n      {path:'AddTeacher',component:AddTeacherComponent},\n      {path:'AddStudent',component:AddStudentComponent},\n      {path:'addcategory',component:AddCategoryComponent},\n      {path:'addsubject',component:AddSubjectComponent},\n      {path:'users',component:UsersListComponent},\n      {path:\"stages\",component:StageListComponent},\n      {path:\"addstage\",component:AddStageComponent},\n      {path:'categories',component:CategoryListComponent},\n      {path:'subjects',component:SubjectListComponent},     \n      {path:'user-subj/:id',component:UserSubjComponent},\n      {path:'addmaterial',component:AddMaterialComponent},\n      {path:'materials',component:MaterialListComponent},\n      {path:'exams',component:ExamListComponent},\n      {path:'addexam',component:AddExamComponent},\n      {path:'addquestion',component:AddQuestionComponent},\n      {path:'profile',component:ProfileComponent},\n      {path:'subjectMaterials/:id',component:SubjectMaterialsComponent},\n      {path:'addSubjectMaterials/:id',component:AddSubjectMaterialComponent},\n\n      { path: \"**\", component: DashBoardComponent }\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DatePipe} from '@angular/common';\n\nimport {PagesRoutingModule} from './pages-routing.module';\nimport {PagesComponent} from './pages/pages.component';\nimport {DashBoardComponent} from './dash-board/dash-board.component';\nimport {LayoutModule} from '../layout/layout.module';\n\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { AddParentComponent } from './add-parent/add-parent.component';\nimport { AddTeacherComponent } from './add-teacher/add-teacher.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { AddCategoryComponent } from './add-category/add-category.component';\nimport { AddSubjectComponent } from './add-subject/add-subject.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { StageListComponent } from './stage-List/stage-List.component';\nimport { AddStageComponent } from './add-stage/add-stage.component';\nimport { SubjectListComponent } from './subject-list/subject-list.component';\n\nimport { UserSubjComponent } from './users-list/user-subj/user-subj.component';\nimport { AddMaterialComponent } from './add-material/add-material.component';\nimport { MaterialListComponent } from './material-list/material-list.component';\nimport { ExamListComponent } from './exam-list/exam-list.component';\nimport { AddExamComponent } from './add-exam/add-exam.component';\nimport { AddQuestionComponent } from './add-question/add-question.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SubjectMaterialsComponent } from './subjectMaterials/subjectMaterials.component';\nimport { AddSubjectMaterialComponent } from './addSubjectMaterial/addSubjectMaterial.component';\n\n\n@NgModule({\n  declarations: [\n    PagesComponent,\n     DashBoardComponent,\n      AddUserComponent,\n       AddParentComponent,\n        AddTeacherComponent,\n         AddStudentComponent,\n          AddCategoryComponent,\n           AddSubjectComponent,\n            UsersListComponent,\n            UpdateUserComponent,\n            CategoryListComponent,\n            StageListComponent,\n            AddStageComponent,\n            SubjectListComponent,\n            UserSubjComponent\n    ,AddMaterialComponent,\n  MaterialListComponent,\nExamListComponent,\nAddExamComponent,\nAddQuestionComponent,\nProfileComponent,\nSubjectMaterialsComponent,\nAddSubjectMaterialComponent],\n  imports: [\n    CommonModule,\n    PagesRoutingModule,\n    LayoutModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class PagesModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvcGFnZXMvcGFnZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport { AuthService } from 'src/app/Service/auth.service';\n\ndeclare var $;\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor(private auth:AuthService) {\n    auth.logOut();\n  }\n\n  ngOnInit() {\n    window.dispatchEvent(new Event('resize'));\n    $('body').addClass('hold-transition skin-blue sidebar-mini');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/Service/auth.service';\nimport { SbjectService } from 'src/app/Service/sbject.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  userId:any = {};\n  subjects:any;\n  constructor(private auth:AuthService,private subjectService:SbjectService) { \n    this.userId = auth.getUserId();   \n    auth.logOut();\n    subjectService.getUserSubjects(this.userId).subscribe(\n      (data:any)=>{this.subjects = data}\n    )\n  }\n\n  ngOnInit() {\n  }\n\n  \n  checkRule(rule:any){\n    if(this.auth.getusertype()==rule){\n      return true;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvc3RhZ2UtTGlzdC9zdGFnZS1MaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SatgesService } from 'src/app/Service/satges.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-stage-List',\n  templateUrl: './stage-List.component.html',\n  styleUrls: ['./stage-List.component.css']\n})\nexport class StageListComponent implements OnInit {\n  stages:any;\n\n  constructor(private stageService:SatgesService,private sharedservice:SharedMethodService,private auth:AuthService) { \n    \n    var result =this.auth.getusertype();\n     if(result!='ADM'){\n       this.sharedservice.navigate(\"home\")           \n    }\n  }\n\n  ngOnInit() {\n    this.stageService.getListStages().subscribe(\n      (data:any)=>{this.stages = data}\n    )\n  }\n\n  get(url:string){\n    this.sharedservice.navigate(url);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvc3ViamVjdC1saXN0L3N1YmplY3QtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SbjectService } from 'src/app/Service/sbject.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject-list.component.css']\n})\nexport class SubjectListComponent implements OnInit {\n  subjects:any;\n  constructor(private subjectService:SbjectService,private sharedservice:SharedMethodService,private auth:AuthService) { \n    auth.logOut();\n    var result =this.auth.getusertype();\n     if(result!='ADM'){\n       this.sharedservice.navigate(\"home\")           \n    }\n  }\n\n  ngOnInit() {\n    this.subjectService.getListSubjects().subscribe(\n      (data:any)=>{this.subjects = data}\n    )\n  }\n\n  get(url:string){\n    this.sharedservice.navigate(url);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvc3ViamVjdE1hdGVyaWFscy9zdWJqZWN0TWF0ZXJpYWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SbjectService } from 'src/app/Service/sbject.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-subjectMaterials',\n  templateUrl: './subjectMaterials.component.html',\n  styleUrls: ['./subjectMaterials.component.css']\n})\nexport class SubjectMaterialsComponent implements OnInit {\n  subjectId;\n  materials:any[]=[];\n  constructor(private router:ActivatedRoute,private subjectService:SbjectService,private auth:AuthService) { \n    auth.logOut();\n  }\n\n  ngOnInit() {\n    this.subjectId = this.router.snapshot.params['id'];\n    this.subjectService.getSubjectMAterial(2).subscribe(\n      (data:any)=>{console.log(data)}\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvdXBkYXRlLXVzZXIvdXBkYXRlLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserListService } from 'src/app/Service/user-list.service';\nimport { UserAdd } from 'src/app/models/user-add';\nimport { DatePipe } from '@angular/common';\nimport { CategoryService } from 'src/app/Service/category.service';\nimport { SatgesService } from 'src/app/Service/satges.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit,OnDestroy {\n  user:UserAdd= {\n    username:\"\",\n    first_name:\"\",\n    last_name:\"\",\n    user_type:\"\",\n    email:\"\",\n    password:\"\",\n    phone:\"\",\n    birth_date: null,\n   \n    job:\"\",\n    stage:null,\n    category:null,\n    hire_date:null,\n    address:\"\"\n  };\n  type:any;\n  categories:any;\n  stages:any;\n  studentHidden:boolean = true;\n  teacherHidden:boolean = true;\n  parentHidden:boolean=true;\n\n  getcategories(){\n    this.ctegorService.getListCategories().subscribe(\n      (data:any)=>{this.categories = data}\n    )\n  }\n\n  getStages(){\n    this.stageService.getListStages().subscribe(\n      (data:any)=>{this.stages = data}\n    )\n  }\n\n\n   \n   \n  \n  constructor(private userl:UserListService, private datePipe: DatePipe,private ctegorService:CategoryService,private stageService:SatgesService,private shareS:SharedMethodService) { \n    var data  = localStorage.getItem(\"userDataupdate\");\n    this.user = JSON.parse(data);\n    this.getval();\n    this.selected(this.user.user_type)\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy(){\n    localStorage.removeItem(\"userDataupdate\");\n  }\n\n  //slect user type and maping values\n  selected(value:any){\n    if(value == 1)\n    {\n      this.type= \"ADM\";\n      this.studentHidden = this.parentHidden  = this.teacherHidden= true;\n    }\n  \n    if(value == 2)\n    {\n      this.type = \"STD\";\n      this.studentHidden = false;\n      this.parentHidden  = this.teacherHidden= true;\n      this.user.stage = 0;\n        this.getStages();\n    }\n   \n    if(value == 3)\n    {\n      this.type = \"PAR\";\n      this.parentHidden = false;\n      this.studentHidden = this.teacherHidden=  true;\n    }\n    \n    if(value == 4)\n    {\n      this.type = \"TECH\";\n      this.teacherHidden = false;\n      this.studentHidden = this.parentHidden  = true;\n      this.user.category = 0;\n        this.getcategories();\n    }\n    \n}\n\nslectSatge(stage:Number){\n \n}\n\n getval(){\n   if(this.user.user_type == \"ADM\")\n     this.user.user_type = \"1\";\n  \n     if(this.user.user_type == \"STD\")\n     this.user.user_type = \"2\";\n   \n     if(this.user.user_type == \"PAR\")\n     this.user.user_type = \"3\";\n    \n     if(this.user.user_type == \"TECH\")\n     this.user.user_type = \"4\";\n }\n\nupdate(){\n  this.selected(this.user.user_type)\n  this.user.user_type = this.type;\n  console.log(this.user)\n  this.userl.updateUser(this.user).subscribe()\n}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvdXNlcnMtbGlzdC91c2VyLXN1YmovdXNlci1zdWJqLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserSubjectsService } from 'src/app/Service/user-subjects.service';\nimport { SbjectService } from 'src/app/Service/sbject.service';\n\n@Component({\n  selector: 'app-user-subj',\n  templateUrl: './user-subj.component.html',\n  styleUrls: ['./user-subj.component.scss']\n})\nexport class UserSubjComponent implements OnInit {\n  id: Number;\n  userSubjects: any[];\n  sub:any = {};\n  userSub:any[] = [];\n  form = new FormData();\n  subjects: any;\n  constructor(private route: ActivatedRoute, private user_subject: UserSubjectsService, private subjectService: SbjectService) {\n\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.user_subject.getUserSubjects(this.id).subscribe(\n      (data: any) => this.userSubjects = data,\n      (error: any) => { },\n      () => {\n        this.subjectService.getListSubjects().subscribe(\n          (data: any) => { this.subjects = data ;console.log(data)}\n        )\n      }\n    )\n  }\n\n  remove(name: string) {\n    this.userSubjects.splice(this.userSubjects.indexOf(name), 1);\n  }\n\n  add(subjecttoadd: any) {   \n    let itemAlreadyExist = this.userSubjects.find(\n      item => item.id === subjecttoadd.id \n    );\n\n    if(itemAlreadyExist){\n      alert(\"already added\");\n    }\n    else{\n      this.userSubjects.push(subjecttoadd)   \n    }\n\n   \n  }\n\n  save(){\n    \n    var form = new FormData();\n   \n    \n    this.userSubjects.forEach(function (value) {\n      form.append(\"subject\", value.id);\n      console.log(value.id + value.name);\n    });\n    this.user_subject.updateUserSubjects(this.id,form)\n   }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcGFnZXMvdXNlcnMtbGlzdC91c2Vycy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserListService } from 'src/app/Service/user-list.service';\nimport { SharedMethodService } from 'src/app/Service/sharedMethod.service';\nimport { AuthService } from 'src/app/Service/auth.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n  users:any;\n  userObserver = {\n    next: (data: any) => this.getusers(),\n    error: (err: string) => console.error('Observer got an error: ' + err),\n    complete: () => { },\n  };\n\n  constructor(private userList:UserListService,private sharedservice:SharedMethodService,private auth:AuthService) { \n    auth.logOut();\n    var result =this.auth.getusertype();\n     if(result!='ADM'){\n       this.sharedservice.navigate(\"home\")           \n    }\n  }\n\n  ngOnInit() {\n        this.getusers();\n  }\n\n  getusers(){\n    this.userList.getAllUsers().subscribe(\n      (data:any)=>{this.users = data}\n    ); \n  }\n\n  get(url:string){\n    this.sharedservice.navigate(url);\n  }\n\n  remove(id:number){\n    this.userList.removeUser(Number(id)).subscribe(this.userObserver)\n  }\n\n  update(user:any){\n    var data = JSON.stringify(user);        \n    window.localStorage.setItem(\"userDataupdate\",data); \n    this.sharedservice.navigate(\"home/UpdateUser\");\n  }\n}\n"],"sourceRoot":"webpack:///"}